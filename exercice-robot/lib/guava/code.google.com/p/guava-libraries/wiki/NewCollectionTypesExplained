
 



 



 
 
 <!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
 <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" >
 
 <meta name="ROBOTS" content="NOARCHIVE">
 
 <link rel="icon" type="image/vnd.microsoft.icon" href="http://www.gstatic.com/codesite/ph/images/phosting.ico">
 
 
 <link rel="canonical" href="http://code.google.com/p/guava-libraries/wiki/NewCollectionTypesExplained" />
 
 <script type="text/javascript">
 
 
 
 
 var codesite_token = null;
 
 
 var CS_env = {"profileUrl":null,"token":null,"assetHostPath":"http://www.gstatic.com/codesite/ph","domainName":null,"assetVersionPath":"http://www.gstatic.com/codesite/ph/17134919371905794448","projectHomeUrl":"/p/guava-libraries","relativeBaseUrl":"","projectName":"guava-libraries","loggedInUserEmail":null};
 var _gaq = _gaq || [];
 _gaq.push(
 ['siteTracker._setAccount', 'UA-18071-1'],
 ['siteTracker._trackPageview']);
 
 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
 })();
 
 </script>
 
 
 <title>NewCollectionTypesExplained - 
 guava-libraries -
 
 Guava's new collection types, explained. - 
 Guava: Google Core Libraries for Java 1.6+ - Google Project Hosting
 </title>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/core.css">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/ph_detail.css" >
 
 
 
 <link type="application/atom+xml" rel="alternate" href="/feeds/p/guava-libraries/gitchanges/basic?repo=wiki&amp;path=/NewCollectionTypesExplained.wiki">
 
 
<!--[if IE]>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/d_ie.css" >
<![endif]-->
 <style type="text/css">
 .menuIcon.off { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -42px }
 .menuIcon.on { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -28px }
 .menuIcon.down { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 0; }
 
 
 #maincol {
 padding-top: 0;
 padding-bottom: 0;
 }

 
 </style>
</head>
<body class="t6">
<script type="text/javascript">
 window.___gcfg = {lang: 'en'};
 (function() 
 {var po = document.createElement("script");
 po.type = "text/javascript"; po.async = true;po.src = "https://apis.google.com/js/plusone.js";
 var s = document.getElementsByTagName("script")[0];
 s.parentNode.insertBefore(po, s);
 })();
</script>
<div class="headbg">

 <div id="gaia">
 

 <span>
 
 
 <a href="#" id="projects-dropdown" onclick="return false;"><u>My favorites</u> <small>&#9660;</small></a>
 | <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FNewCollectionTypesExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FNewCollectionTypesExplained" onclick="_CS_click('/gb/ph/signin');"><u>Sign in</u></a>
 
 </span>

 </div>

 <div class="gbh" style="left: 0pt;"></div>
 <div class="gbh" style="right: 0pt;"></div>
 
 
 <div style="height: 1px"></div>
<!--[if lte IE 7]>
<div style="text-align:center;">
Your version of Internet Explorer is not supported. Try a browser that
contributes to open source, such as <a href="http://www.firefox.com">Firefox</a>,
<a href="http://www.google.com/chrome">Google Chrome</a>, or
<a href="http://code.google.com/chrome/chromeframe/">Google Chrome Frame</a>.
</div>
<![endif]-->



 <table style="padding:0px; margin: 0px 0px 10px 0px; width:100%" cellpadding="0" cellspacing="0"
 itemscope itemtype="http://schema.org/CreativeWork">
 <tr style="height: 58px;">
 
 
 
 <td id="plogo">
 <link itemprop="url" href="/p/guava-libraries">
 <a href="/p/guava-libraries/">
 
 <img src="http://www.gstatic.com/codesite/ph/images/search-48.gif" alt="Logo" itemprop="image">
 
 </a>
 </td>
 
 <td style="padding-left: 0.5em">
 
 <div id="pname">
 <a href="/p/guava-libraries/"><span itemprop="name">guava-libraries</span></a>
 </div>
 
 <div id="psum">
 <a id="project_summary_link"
 href="/p/guava-libraries/"><span itemprop="description">Guava: Google Core Libraries for Java 1.6+</span></a>
 
 </div>
 
 
 </td>
 <td style="white-space:nowrap;text-align:right; vertical-align:bottom;">
 
 <form action="/hosting/search">
 <input size="30" name="q" value="" type="text">
 
 <input type="submit" name="projectsearch" value="Search projects" >
 </form>
 
 </tr>
 </table>

</div>

 
<div id="mt" class="gtb"> 
 <a href="/p/guava-libraries/" class="tab ">Project&nbsp;Home</a>
 
 
 
 
 <a href="/p/guava-libraries/downloads/list" class="tab ">Downloads</a>
 
 
 
 
 
 <a href="/p/guava-libraries/wiki/GuavaExplained?tm=6" class="tab active">Wiki</a>
 
 
 
 
 
 <a href="/p/guava-libraries/issues/list"
 class="tab ">Issues</a>
 
 
 
 
 
 <a href="/p/guava-libraries/source/checkout"
 class="tab ">Source</a>
 
 
 
 
 
 
 
 
 
 
 <div class=gtbc></div>
</div>
<table cellspacing="0" cellpadding="0" width="100%" align="center" border="0" class="st">
 <tr>
 
 
 
 
 <td class="subt">
 <div class="issueDetail">
<div class="isf">
 
 <span class="inIssueList"> 
 <span>Search</span>
 <form action="/p/guava-libraries/w/list" method="GET" style="display:inline">
 <select id="can" name="can" >
 <option disabled="disabled">Search within:</option>
 
 <option value="1" >&nbsp;All wiki pages</option>
 <option value="3" >&nbsp;Featured pages</option>
 <option value="2" selected="selected">&nbsp;Current pages</option>
 
 
 <option value="4" >&nbsp;Deprecated pages</option>
 
 </select>
 <span>for</span>
 <span id="qq"><input type="text" size="38" id="searchq" name="q" value=""
 autocomplete="off" ></span>
 
 
 
 <input type="submit" value="Search" >
 </form>
 </span>

 
 
 
 
 
 
 

</div>
</div>

 </td>
 
 
 
 
 
 
 <td align="right" valign="top" class="bevel-right"></td>
 </tr>
</table>


<script type="text/javascript">
 var cancelBubble = false;
 function _go(url) { document.location = url; }
</script>
<div id="maincol"
 
 
 style="padding:0 3px 3px 0; margin:0"
 
 
>

 






 
<style type="text/css">
 #wikimaincol { padding-top: 6px; padding-left:1em}
 #sidebarcontainer {
 padding: 1.5em 2px 2px 2px;
 min-width: 15em;
 max-width: 20em;
 overflow:hidden;
}
 .sidebartop ul { margin:0 0 0 .5em; padding-left:0 !important; list-style:none}
 .sidebartop ul ul { margin-left:1em; padding-left:0; list-style:none; display:none}
 .sidebartop li { margin:0 0 2px 0; padding:1px; padding-left:14px; cursor:pointer}
 .sidebartop li a { padding:2px}
 .sidebartop li { background: url(http://www.gstatic.com/codesite/ph/images/plus.gif) no-repeat 1px 3px}
 .sidebartop li.treeopen { background: url(http://www.gstatic.com/codesite/ph/images/minus.gif) no-repeat 1px 3px}
 .sidebartop li.treeleaf { background:none}
 .currentpagelink { 
 font-weight: bold;
 text-decoration: none;
 color: black !important; 
 background: #c3d9ff;
 }
 .sidebartop ul.treeleafcontainer { display:block;}
 .sidebarcontent { 
 vertical-align:top;
 padding-right: 3px;
 border-right: 2px solid #ccc;
 }
</style>



 <style type="text/css">
 .delcom { background: #e8e8e8 }
 .commentcontent {
 margin: 2em;
 padding: 0px 10px;
 width: 66em;
 }
 .artifactcomment {
 border-top: 3px solid #c3d9ff;
 }
 #commentform {
 border-top: 3px solid #c3d9ff;
 }
 </style>

<div id="wikipage">
<table>
 <tr>
 
 
 <td class="sidebarcontent">
 <div class="vt expand" id="wikisidebar">
 <div>
 
 <div style="float:right;">
 <a class="ifExpand" style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Hide sidebar"><b>&lsaquo;&lsaquo;</b></a>
 </div>
 <div class="ifCollapse" style="padding:0 2px">
 <a style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Show sidebar"><b>&rsaquo;&rsaquo;</b></a>
 </div>
 
 
 <div id="sidebarcontainer" class="sidebartop ifExpand">
 <ul><li><a href="/p/guava-libraries/wiki/GuavaExplained">Introduction</a> </li><li>Basic Utilities </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained">Using/avoiding null</a> </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained#Optional">Optional</a> </li></ul><li><a href="/p/guava-libraries/wiki/PreconditionsExplained">Preconditions</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained">Ordering</a> </li><ul><li><a href="/p/guava-libraries/wiki/OrderingExplained#Creation">Creation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Manipulation">Manipulation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Application">Application</a> </li></ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained">Object methods</a> </li><ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals">equals</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#hashCode">hashCode</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#toString">toString</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#compare/compareTo">compare/compareTo</a> </li></ul><li><a href="/p/guava-libraries/wiki/ThrowablesExplained">Throwables</a> </li></ul><li>Collections </li><ul><li><a href="/p/guava-libraries/wiki/ImmutableCollectionsExplained">Immutable collections</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained">New collection types</a> </li><ul><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap">Multimap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#BiMap">BiMap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Table">Table</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#ClassToInstanceMap">ClassToInstanceMap</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained">Utility Classes</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Iterables">Iterables</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Lists">Lists</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Sets">Sets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Maps">Maps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multisets">Multisets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multimaps">Multimaps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Tables">Tables</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained">Extension Utilities</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#Forwarding_Decorators">Forwarding Decorators</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#PeekingIterator">PeekingIterator</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#AbstractIterator">AbstractIterator</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/CachesExplained">Caches</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Applicability">Applicability</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Population">Population</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Eviction">Eviction</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Removal_Listeners">Removal Listeners</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Refresh">Refresh</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Timed_Eviction">Timed Eviction</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Size-based_Eviction">Size Caps</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Reference-based_Eviction">Garbage Collection</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Explicit_Removals">Explicit Removals</a> </li></ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Features">Features</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Statistics">Statistics</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained">Functional Idioms</a> </li><ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions_and_Predicates">Obtaining</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Predicates">Using Predicates</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions">Using Functions</a> </li></ul><li>Concurrency </li><ul><li><a href="/p/guava-libraries/wiki/ListenableFutureExplained">ListenableFuture</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained">Service</a> </li><ul><li><a href="/p/guava-libraries/wiki/ServiceExplained#Using_a_Service">Using</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained#Implementations">Implementations</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/StringsExplained">Strings</a> </li><ul><li><a href="/p/guava-libraries/wiki/StringsExplained#Joiner">Joiner</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Splitter">Splitter</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#CharMatcher">CharMatcher</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Charsets">Charsets</a> </li></ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained">Primitives</a> </li><ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Primitive_array_utilities">Primitive arrays</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#General_utility_methods">General utilities</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Byte_conversion_methods">Byte conversion</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Unsigned_support">Unsigned support</a> </li></ul><li><a href="/p/guava-libraries/wiki/RangesExplained">Ranges</a> </li><ul><li><a href="/p/guava-libraries/wiki/RangesExplained#Building_Ranges">Building</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Operations">Operations</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Discrete_Domains">Discrete Domains</a> </li></ul><li><a href="/p/guava-libraries/wiki/IOExplained">I/O</a> </li><li><a href="/p/guava-libraries/wiki/HashingExplained">Hashing</a> </li><ul><li><a href="/p/guava-libraries/wiki/HashingExplained#BloomFilter">BloomFilter</a> </li></ul><li><a href="/p/guava-libraries/wiki/EventBusExplained">EventBus</a> </li><li><a href="/p/guava-libraries/wiki/MathExplained">Math</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Math_on_Integral_Types">Integral</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Checked_Arithmetic">Overflow Checking</a> </li></ul><li><a href="/p/guava-libraries/wiki/MathExplained#Floating-point_arithmetic">Floating Point</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained">Reflection</a> </li><ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained#TypeToken">TypeToken</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReleaseHistory">Releases</a> </li><ul><li><a href="/p/guava-libraries/wiki/Release13">Release 13</a> </li><li><a href="/p/guava-libraries/wiki/Release12">Release 12</a> </li><li><a href="/p/guava-libraries/wiki/Release11">Release 11</a> </li><li><a href="/p/guava-libraries/wiki/Release10">Release 10</a> </li></ul><li>Tips </li><ul><li><a href="/p/guava-libraries/wiki/PhilosophyExplained">Philosophy</a> </li><li><a href="/p/guava-libraries/wiki/UseGuavaInYourBuild">Building with Guava</a> </li><li><a href="/p/guava-libraries/wiki/UsingProGuardWithGuava">Shrinking JARs with ProGuard</a> </li><li><a href="/p/guava-libraries/wiki/ApacheCommonCollectionsEquivalents">Translating from Apache Commons</a> </li><li><a href="/p/guava-libraries/wiki/Compatibility">Guava and Compatibility</a> </li><li><a href="/p/guava-libraries/wiki/IdeaGraveyard">Idea Graveyard</a> </li><li><a href="/p/guava-libraries/wiki/FriendsOfGuava">Friends of Guava</a> </li><li><a href="/p/guava-libraries/wiki/HowToContribute">How to Contribute</a> </li></ul><li><a href="/p/guava-libraries/wiki/GuavaTermsExplained">Glossary</a> </li><li><a href="http://groups.google.com/group/guava-discuss" rel="nofollow">Mailing List</a> </li><li><a href="http://stackoverflow.com/questions/tagged/guava" rel="nofollow">Stack Overflow</a> </li><li><a href="http://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures" rel="nofollow">Footprint of JDK/Guava data structures</a> </li></ul>
 </div>
 </div>
</div>

 </td>
 
 <td style="vertical-align:top; padding-left:5px">
 
 <div id="wikiheader">
 
 <span style="font-size:120%;font-weight:bold">NewCollectionTypesExplained</span>
 &nbsp;
 <div> 
 
 <i>Guava's new collection types, explained.</i>
 
 
 
 <div id="wikiauthor" style="float:right">
 Updated <span title="Mon Oct  8 16:29:33 2012">
 Oct 8, 2012</span>
 
 by 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>
 
 </div>
 </div>
 </div>
 
 <div id="wikicontent">
 <div class="vt" id="wikimaincol">
 <p>TODO: More examples </p><p>Guava introduces a number of new collection types that are not in the JDK, but that we have found to be broadly useful.  These are all designed to coexist happily with the JDK collections framework, without shoehorning things into the JDK collection abstractions. </p><p>As a general rule, the Guava collection implementations follow JDK interface contracts very precisely. </p><h1><a name="Multiset"></a>Multiset<a href="#Multiset" class="section_anchor"></a></h1><p>The traditional Java idiom for e.g. counting how many times a word occurs in a document is something like: </p><pre class="prettyprint">Map&lt;String, Integer&gt; counts = new HashMap&lt;String, Integer&gt;();
for (String word : words) {
  Integer count = counts.get(word);
  if (count == null) {
    counts.put(word, 1);
  } else {
    counts.put(word, count + 1);
  }
}</pre><p>This is awkward, prone to easy mistakes, and doesn&#x27;t support collecting a variety of useful statistics, like the total number of words.  We can do better. </p><p>Guava provides a new collection type, <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html" rel="nofollow"><tt>Multiset</tt></a>, which supports adding multiples of elements, and counting how many occurrences of each element the multiset contains.  Notably, <tt>Multiset</tt> does not support negative element counts, nor element counts above <tt>Integer.MAX_VALUE</tt>. </p><p>The above example, implemented, with Multiset, would be: </p><pre class="prettyprint">Multiset&lt;String&gt; wordsMultiset = HashMultiset.create();
wordsMultiset.addAll(words);
// now we can use wordsMultiset.count(String) to find the count of a word</pre><p>Essentially, calling <tt>multiset.add(word)</tt> adds one <i>occurrence</i> of <tt>word</tt> to the multiset. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html#count(java.lang.Object)" rel="nofollow"><tt>count(E)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Count the number of occurrences of an element that have been added to this multiset. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html#elementSet()" rel="nofollow"><tt>elementSet()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> View the distinct elements of a <tt>Multiset&lt;E&gt;</tt> as a <tt>Set&lt;E&gt;</tt>. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html#entrySet()" rel="nofollow"><tt>entrySet()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Similar to <tt>Map.entrySet()</tt>, returns a <tt>Set&lt;Multiset.Entry&lt;E&gt;&gt;</tt>, containing entries supporting <tt>getElement()</tt> and <tt>getCount()</tt>. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multiset.html#add(java.lang.Object,int)" rel="nofollow"><tt>add(E, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Adds the specified number of occurrences of the specified element. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multiset.html#remove(java.lang.Object, int)" rel="nofollow"><tt>remove(E, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes the specified number of occurrences of the specified element. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multiset.html#setCount(E, int)" rel="nofollow"><tt>setCount(E, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Sets the occurrence count of the specified element to the specified nonnegative value. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>size()</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the total number of occurrences of all elements in the <tt>Multiset</tt>. </td></tr> </table></p><h2><a name="Multiset_Is_Not_A_Map"></a>Multiset Is Not A Map<a href="#Multiset_Is_Not_A_Map" class="section_anchor"></a></h2><p>Note that <tt>Multiset&lt;E&gt;</tt> is <i>not</i> a <tt>Map&lt;E, Integer&gt;</tt>, though that might be part of a <tt>Multiset</tt> implementation.  <tt>Multiset</tt> is a true <tt>Collection</tt> type, and satisfies all of the associated contractual obligations.  Other notable differences include: </p><ul><li>A <tt>Multiset&lt;E&gt;</tt> has elements with positive counts only.  No element can have negative counts, and values with count <tt>0</tt> are considered to not be in the multiset.  They do not appear in the <tt>elementSet()</tt> or <tt>entrySet()</tt> view. </li><li><tt>multiset.size()</tt> returns the size of the collection, which is equal to the sum of the counts of all elements.  For the number of distinct elements, use <tt>elementSet().size()</tt>.  (So, for example, <tt>add(E)</tt> increases <tt>multiset.size()</tt> by one.) </li><li><tt>multiset.iterator()</tt> iterates over each occurrence of each element, so the length of the iteration is equal to <tt>multiset.size()</tt>. </li><li><tt>Multiset&lt;E&gt;</tt> supports adding elements, removing elements, or setting the count of elements directly.  <tt>setCount(elem, 0)</tt> is equivalent to removing all occurrences of the element. </li><li><tt>multiset.count(elem)</tt> for an element not in the multiset always returns <tt>0</tt>. </li></ul><h2><a name="Implementations"></a>Implementations<a href="#Implementations" class="section_anchor"></a></h2><p>Guava provides many implementations of <tt>Multiset</tt>, which <i>roughly</i> correspond to JDK map implementations. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Map </td><td style="border: 1px solid #ccc; padding: 5px;"> Corresponding Multiset</td><td style="border: 1px solid #ccc; padding: 5px;"> Supports <tt>null</tt> elements </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/HashMultiset.html" rel="nofollow"><tt>HashMultiset</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Yes </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>TreeMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/TreeMultiset.html" rel="nofollow"><tt>TreeMultiset</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Yes (if the comparator does) </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/LinkedHashMultiset.html" rel="nofollow"><tt>LinkedHashMultiset</tt></a></td><td style="border: 1px solid #ccc; padding: 5px;"> Yes </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ConcurrentHashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ConcurrentHashMultiset.html" rel="nofollow"><tt>ConcurrentHashMultiset</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> No </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableMultiset.html" rel="nofollow"><tt>ImmutableMultiset</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> No </td></tr> </table></p><h2><a name="SortedMultiset"></a>SortedMultiset<a href="#SortedMultiset" class="section_anchor"></a></h2><p><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/SortedMultiset.html" rel="nofollow"><tt>SortedMultiset</tt></a> is a new variation on the <tt>Multiset</tt> interface that supports efficiently taking sub-multisets on specified ranges.  For example, you could use <tt>latencies.subMultiset(0, BoundType.CLOSED, 100, BoundType.OPEN).size()</tt> to determine how many hits to your site had under 100ms latency, and then compare that to <tt>latencies.size()</tt> to determine the overall proportion. </p><p><tt>TreeMultiset</tt> implements the <tt>SortedMultiset</tt> interface.  At the time of writing, <tt>ImmutableSortedMultiset</tt> is still being tested for GWT compatibility. </p><h1><a name="Multimap"></a>Multimap<a href="#Multimap" class="section_anchor"></a></h1><p>The traditional way to represent a graph in Java is <tt>Map&lt;V, Set&lt;V&gt;&gt;</tt>, which is awkward in a number of ways.  Guava&#x27;s <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html" rel="nofollow">Multimap</a> framework makes it easy to handle a mapping from keys to multiple values.  A <tt>Multimap</tt> is a general way to associate keys with arbitrarily many values. </p><p>You rarely use the <tt>Multimap</tt> interface directly, however; more often you&#x27;ll use <tt>ListMultimap</tt> or <tt>SetMultimap</tt>, which map keys to a <tt>List</tt> or a <tt>Set</tt> respectively. </p><h2><a name="Modifying"></a>Modifying<a href="#Modifying" class="section_anchor"></a></h2><p><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html#get(K)" rel="nofollow"><tt>Multimap.get(key)</tt></a> returns a <i>view</i> of the values associated with the specified key, even if there are none currently.  For a <tt>ListMultimap</tt>, it returns a <tt>List</tt>, for a <tt>SetMultimap</tt>, it returns a <tt>Set</tt>. </p><p>Modifications write through to the underlying <tt>Multimap</tt>.  For example, </p><pre class="prettyprint">Set&lt;Person&gt; aliceChildren = childrenMultimap.get(alice);
aliceChildren.clear();
aliceChildren.add(bob);
aliceChildren.add(carol);</pre><p>writes through to the underlying multimap. </p><p>Other ways of modifying the multimap (more directly) include: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Signature </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td><td style="border: 1px solid #ccc; padding: 5px;"> Equivalent </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#put(K, V)" rel="nofollow"><tt>put(K, V)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Adds an association from the key to the value  </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>multimap.get(key).add(value)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#putAll(K, java.lang.Iterable)" rel="nofollow"><tt>putAll(K, Iterable&lt;V&gt;)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Adds associations from the key to each of the values in turn </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Iterables.addAll(multimap.get(key), values)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#remove(java.lang.Object, java.lang.Object)" rel="nofollow"><tt>remove(K, V)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes one association from <tt>key</tt> to <tt>value</tt> and returns <tt>true</tt> if the multimap changed.  </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>multimap.get(key).remove(value)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#removeAll(java.lang.Object)" rel="nofollow"><tt>removeAll(K)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes and returns all the values associated with the specified key.  The returned collection may or may not be modifiable, but modifying it will not affect the multimap.  (Returns the appropriate collection type.)  </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>multimap.get(key).clear()</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#replaceValues(K, java.lang.Iterable)" rel="nofollow"><tt>replaceValues(K, Iterable&lt;V&gt;)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Clears all the values associated with <tt>key</tt> and sets <tt>key</tt> to be associated with each of <tt>values</tt>.  Returns the values that were previously associated with the key. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>multimap.get(key).clear(); Iterables.addAll(multimap.get(key), values)</tt> </td></tr> </table></p><h2><a name="Views"></a>Views<a href="#Views" class="section_anchor"></a></h2><p><tt>Multimap</tt> also supports a number of powerful views. <ul><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html#asMap()" rel="nofollow"><tt>asMap</tt></a> views any <tt>Multimap&lt;K, V&gt;</tt> as a <tt>Map&lt;K, Collection&lt;V&gt;&gt;</tt>.  The returned map supports <tt>remove</tt>, and changes to the returned collections write through, but the map does not support <tt>put</tt> or <tt>putAll</tt>.  Critically, you can use <tt>asMap().get(key)</tt> when you want <tt>null</tt> on absent keys rather than a fresh, writable empty collection.  (You can and should cast <tt>asMap.get(key)</tt> to the appropriate collection type -- a <tt>Set</tt> for a <tt>SetMultimap</tt>, a <tt>List</tt> for a <tt>ListMultimap</tt> -- but the type system does not allow <tt>ListMultimap</tt> to return <tt>Map&lt;K, List&lt;V&gt;&gt;</tt> here.) </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html#entries()" rel="nofollow"><tt>entries</tt></a> views the <tt>Collection&lt;Map.Entry&lt;K, V&gt;&gt;</tt> of all entries in the <tt>Multimap</tt>.  (For a <tt>SetMultimap</tt>, this is a <tt>Set</tt>.) </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html#keySet()" rel="nofollow"><tt>keySet</tt></a> views the distinct keys in the <tt>Multimap</tt>. </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimap.html#keys()" rel="nofollow"><tt>keys</tt></a> views the keys of the <tt>Multimap</tt> as a <tt>Multiset</tt>, with multiplicity equal to the number of values associated to that key.  Elements can be removed from the <tt>Multiset</tt>, but not added; changes will write through. </li><li><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimap.html#values()" rel="nofollow"><tt>values()</tt></a> views the all the values in the <tt>Multimap</tt> as a &quot;flattened&quot; <tt>Collection&lt;V&gt;</tt>, all as one collection.  This is similar to <tt>Iterables.concat(multimap.asMap().values())</tt>, but returns a full <tt>Collection</tt> instead. </li></ul></p><h2><a name="Multimap_Is_Not_A_Map"></a>Multimap Is Not A Map<a href="#Multimap_Is_Not_A_Map" class="section_anchor"></a></h2><p>A <tt>Multimap&lt;K, V&gt;</tt> is <i>not</i> a <tt>Map&lt;K, Collection&lt;V&gt;&gt;</tt>, though such a map might be used in a <tt>Multimap</tt> implementation.  Notable differences include: </p><ul><li><tt>Multimap.get(key)</tt> always returns a non-null, possibly empty collection.  This doesn&#x27;t imply that the multimap spends any memory associated with the key, but instead, the returned collection is a view that allows you to add associations with the key if you like. </li><li>If you prefer the more <tt>Map</tt>-like behavior of returning <tt>null</tt> for keys that aren&#x27;t in the multimap, use the <tt>asMap()</tt> view to get a <tt>Map&lt;K, Collection&lt;V&gt;&gt;</tt>.  (You may have to cast the <tt>Collection&lt;V&gt;</tt> to a <tt>List</tt> or <tt>Set</tt>.) </li><li><tt>Multimap.containsKey(key)</tt> is true if and only if there are any elements associated with the specified key.  Just because you had elements associated with the key in the past, or queried the key, doesn&#x27;t imply that <tt>Multimap.asMap()</tt> contains the key, or anything along those lines. </li><li><tt>Multimap.entries()</tt> returns all entries for all keys in the <tt>Multimap</tt>.  If you want all key-collection entries, use <tt>asMap().entrySet()</tt>. </li><li><tt>Multimap.size()</tt> returns the number of entries in the entire multimap, not the number of distinct keys.  Use <tt>Multimap.keySet().size()</tt> instead to get the number of distinct keys. </li></ul><h2><a name="Implementations"></a>Implementations<a href="#Implementations" class="section_anchor"></a></h2><p><tt>Multimap</tt> provides a wide variety of implementations, so you can use it anywhere you would have used a <tt>Map&lt;K, Collection&lt;V&gt;&gt;</tt>. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Implementation </td><td style="border: 1px solid #ccc; padding: 5px;"> Keys behave like... </td><td style="border: 1px solid #ccc; padding: 5px;"> Values behave like.. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ArrayListMultimap.html" rel="nofollow"><tt>ArrayListMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ArrayList</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/HashMultimap.html" rel="nofollow"><tt>HashMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashSet</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/LinkedListMultimap.html" rel="nofollow"><tt>LinkedListMultimap</tt></a><tt>*</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashMap</tt><tt>*</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedList</tt><tt>*</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/LinkedHashMultimap.html" rel="nofollow"><tt>LinkedHashMultimap</tt></a><tt>**</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashSet</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/TreeMultimap.html" rel="nofollow"><tt>TreeMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>TreeMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>TreeSet</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableListMultimap.html" rel="nofollow"><tt>ImmutableListMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableList</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableSetMultimap.html" rel="nofollow"><tt>ImmutableSetMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableSet</tt> </td></tr> </table></p><p>Each of these implementations, except the immutable ones, support null keys and values. </p><p><tt>*</tt> <tt>LinkedListMultimap.entries()</tt> preserves iteration order across non-distinct key values.  See the link for details. </p><p><tt>**</tt> <tt>LinkedHashMultimap</tt> preserves insertion order of entries, as well as the insertion order of keys, and the set of values associated with any one key. </p><p>Be aware that not all implementations are actually implemented as a <tt>Map&lt;K, Collection&lt;V&gt;&gt;</tt> with the listed implementations!  (In particular, several <tt>Multimap</tt> implementations use custom hash tables to minimize overhead.) </p><p>If you need more customization, use <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimaps.html#newMultimap(java.util.Map,%20com.google.common.base.Supplier)" rel="nofollow"><tt>Multimaps.newMultimap(Map, Supplier&lt;Collection&gt;)</tt></a> or the <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimaps.html#newListMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow">list</a> and <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multimaps.html#newSetMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow">set</a> versions to use a custom collection, list, or set implementation to back your multimap. </p><h1><a name="BiMap"></a>BiMap<a href="#BiMap" class="section_anchor"></a></h1><p>The traditional way to map values back to keys is to maintain two separate maps and keep them both in sync, but this is bug-prone and can get extremely confusing when a value is already present in the map. </p><p>A <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/BiMap.html" rel="nofollow"><tt>BiMap&lt;K, V&gt;</tt></a> is a <tt>Map&lt;K, V&gt;</tt> that guarantees that values are unique, which: </p><ul><li>allows you to view the &quot;inverse&quot; <tt>BiMap&lt;V, K&gt;</tt> with <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/BiMap.html#inverse()" rel="nofollow"><tt>inverse()</tt></a> </li><li>makes <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/BiMap.html#values()" rel="nofollow"><tt>values()</tt></a> a <tt>Set</tt> </li></ul><p><tt>BiMap.put(key, value)</tt> will throw an <tt>IllegalArgumentException</tt> if you attempt to map a key to an already-present value.  If you wish to delete any preexisting entry with the specified value, use <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/BiMap.html#forcePut(java.lang.Object,java.lang.Object)" rel="nofollow"><tt>BiMap.forcePut(key, value)</tt></a> instead. </p><h2><a name="Implementations"></a>Implementations<a href="#Implementations" class="section_anchor"></a></h2><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Key-Value Map Impl </td><td style="border: 1px solid #ccc; padding: 5px;"> Value-Key Map Impl </td><td style="border: 1px solid #ccc; padding: 5px;"> Corresponding <tt>BiMap</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/HashBiMap.html" rel="nofollow"><tt>HashBiMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ImmutableBiMap.html" rel="nofollow"><tt>ImmutableBiMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>EnumMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>EnumMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/EnumBiMap.html" rel="nofollow"><tt>EnumBiMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>EnumMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/EnumHashBiMap.html" rel="nofollow"><tt>EnumHashBiMap</tt></a> </td></tr> </table></p><p><i>Note:</i> <tt>BiMap</tt> utilities like <tt>synchronizedBiMap</tt> live in <a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Maps">`Maps`</a>. </p><h1><a name="Table"></a>Table<a href="#Table" class="section_anchor"></a></h1><pre class="prettyprint">Table&lt;Vertex, Vertex, Double&gt; weightedGraph = HashBasedTable.create();
weightedGraph.put(v1, v2, 4);
weightedGraph.put(v1, v3, 20);
weightedGraph.put(v2, v3, 5);

weightedGraph.row(v1); // returns a Map mapping v2 to 4, v3 to 20
weightedGraph.column(v3); // returns a Map mapping v1 to 20, v2 to 5</pre><p>Typically, when you are trying to index on more than one key at a time, you will wind up with something like <tt>Map&lt;FirstName, Map&lt;LastName, Person&gt;&gt;</tt>, which is ugly and awkward to use.  Guava provides a new collection type, <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html" rel="nofollow"><tt>Table</tt></a>, which supports this use case for any &quot;row&quot; type and &quot;column&quot; type.  <tt>Table</tt> supports a number of views to let you use the data from any angle, including <ul><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#rowMap()" rel="nofollow"><tt>rowMap()</tt></a>, which views a <tt>Table&lt;R, C, V&gt;</tt> as a <tt>Map&lt;R, Map&lt;C, V&gt;&gt;</tt>.  Similarly, <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#rowKeySet()" rel="nofollow"><tt>rowKeySet()</tt></a> returns a <tt>Set&lt;R&gt;</tt>. </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#row(R)" rel="nofollow"><tt>row(r)</tt></a> returns a non-null <tt>Map&lt;C, V&gt;</tt>.  Writes to the <tt>Map</tt> will write through to the underlying <tt>Table</tt>. </li><li>Analogous column methods are provided: <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#columnMap()" rel="nofollow"><tt>columnMap()</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#columnKeySet()" rel="nofollow"><tt>columnKeySet()</tt></a>, and <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#column(C)" rel="nofollow"><tt>column(c)</tt></a>.  (Column-based access is somewhat less efficient than row-based access.) </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.html#cellSet()" rel="nofollow"><tt>cellSet()</tt></a> returns a view of the <tt>Table</tt> as a set of <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Table.Cell.html" rel="nofollow"><tt>Table.Cell&lt;R, C, V&gt;</tt></a>.  <tt>Cell</tt> is much like <tt>Map.Entry</tt>, but distinguishes the row and column keys. </li></ul></p><p>Several <tt>Table</tt> implementations are provided, including: <ul><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/HashBasedTable.html" rel="nofollow"><tt>HashBasedTable</tt></a>, which is essentially backed by a <tt>HashMap&lt;R, HashMap&lt;C, V&gt;&gt;</tt>. </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/TreeBasedTable.html" rel="nofollow"><tt>TreeBasedTable</tt></a>, which is essentially backed by a <tt>TreeMap&lt;R, TreeMap&lt;C, V&gt;&gt;</tt>. </li><li><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableTable.html" rel="nofollow"><tt>ImmutableTable</tt></a>, which is essentially backed by an <tt>ImmutableMap&lt;R, ImmutableMap&lt;C, V&gt;&gt;</tt>.  (Note: <tt>ImmutableTable</tt> has optimized implementations for sparser and denser data sets.) </li><li><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ArrayTable.html" rel="nofollow"><tt>ArrayTable</tt></a>, which requires that the complete universe of rows and columns be specified at construction time, but is backed by a two-dimensional array to improve speed and memory efficiency when the table is dense.  <tt>ArrayTable</tt> works somewhat differently from other implementations; consult the Javadoc for details. </li></ul></p><h1><a name="ClassToInstanceMap"></a>ClassToInstanceMap<a href="#ClassToInstanceMap" class="section_anchor"></a></h1><p>Sometimes, your map keys aren&#x27;t all of the same type: they <i>are</i> types, and you want to map them to values of that type.  Guava provides <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ClassToInstanceMap.html" rel="nofollow">ClassToInstanceMap</a> for this purpose. </p><p>In addition to extending the <tt>Map</tt> interface, <tt>ClassToInstanceMap</tt> provides the methods <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ClassToInstanceMap.html#getInstance(java.lang.Class)" rel="nofollow">T getInstance(Class&lt;T&gt;)</a> and <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ClassToInstanceMap.html#putInstance(java.lang.Class,java.lang.Object)" rel="nofollow">T putInstance(Class&lt;T&gt;, T)</a>, which eliminate the need for unpleasant casting while enforcing type safety. </p><p><tt>ClassToInstanceMap</tt> has a single type parameter, typically named <tt>B</tt>, representing the upper bound on the types managed by the map.  For example: </p><pre class="prettyprint">ClassToInstanceMap&lt;Number&gt; numberDefaults = MutableClassToInstanceMap.create();
numberDefaults.putInstance(Integer.class, Integer.valueOf(0));</pre><p>Technically, <tt>ClassToInstanceMap&lt;B&gt;</tt> implements <tt>Map&lt;Class&lt;? extends B&gt;, B&gt;</tt> -- or in other words, a map from subclasses of B to instances of B.  This can make the generic types involved in <tt>ClassToInstanceMap</tt> mildly confusing, but just remember that <tt>B</tt> is always the upper bound on the types in the map -- usually, <tt>B</tt> is just <tt>Object</tt>. </p><p>Guava provides implementations helpfully named <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MutableClassToInstanceMap.html" rel="nofollow">MutableClassToInstanceMap</a> and <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableClassToInstanceMap.html" rel="nofollow">ImmutableClassToInstanceMap</a>. </p><p><strong>Important</strong>: Like any other <tt>Map&lt;Class, Object&gt;</tt>, a <tt>ClassToInstanceMap</tt> may contain entries for primitive types, and a primitive type and its corresponding wrapper type may map to different values. </p>
 </div>
 </div>
 </td><tr>
</table>
 </div>


 
 <div id="wikicommentcol">
 


 
 
 
 
 
 
 
 
 
 
 
 
 

<div class="collapse">


 


<div id="commentlist">

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/101666768783309926777/">geoffr...@google.com</a
>,
 
 </span>
 <span class="date" title="Fri Jan 27 08:35:32 2012">Jan 27, 2012</span>
 <div>
<div class="commentcontent">
<p>The first line in table example &#x27;Table&lt;Vertex, Vertex, Double&gt; weightedGraph = HashTable<a href="/p/guava-libraries/w/edit/HashTable">?</a>.create();&#x27; should use <tt>HashBasedTable</tt>. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Sat Jan 28 08:24:13 2012">Jan 28, 2012</span>
 <div>
<div class="commentcontent">
<p>Fixed. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/105935305727292962698/">padhy.de...@ensarm.com</a
>,
 
 </span>
 <span class="date" title="Thu Aug 16 01:48:17 2012">Aug 16, 2012</span>
 <div>
<div class="commentcontent">
<p>Multimap treated as a single name ? thats a bit awkward.. Shouldn&#x27;t M be capital in Map or is it intentional ? </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Mon Sep 10 13:10:22 2012">Sep 10, 2012</span>
 <div>
<div class="commentcontent">
<p>That&#x27;s quite deliberate. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/111476929022304645805/">suppress...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Mon Sep 17 12:53:44 2012">Sep 17, 2012</span>
 <div>
<div class="commentcontent">
<p>&quot;Multimap.containsKey(key) is true if and only if there are any elements associated with the specified key.&quot; </p><p>Does this mean that Multimap.containsKey(key) =&gt; !Multimap.get(key).isEmpty()? </p><p>I&#x27;m also a little confused by the vagueness of the second sentence: </p><p>&quot;Just because you had elements associated with the key in the past, or queried the key, doesn&#x27;t imply that Multimap.asMap() contains the key, or anything along those lines.&quot; </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/114102611497897753148/">eartheng...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Thu Nov  8 21:59:13 2012">Yesterday (35 hours ago)</span>
 <div>
<div class="commentcontent">
<p>Should there be a method boolean BiMap<a href="/p/guava-libraries/w/edit/BiMap">?</a>&lt;K,V&gt;.tryPut(K key, V value)? No exceptions, do nothing and return false in case a duplicated value being given. This is the way to avoid exception costs. </p>
</div>
 
 
 </div>
 </div>
 

</div>
</div>

 


 <script type="text/javascript">
 function delComment(sequence_num, create_time, delete_mode) {
 var f = document.forms["delcom"];
 f.sequence_num.value = sequence_num;
 f.create_time.value = create_time;
 f.mode.value = delete_mode;
 f.submit();
 return false;
 }
 </script>


 </div>
 
 
 
 
 <br>
 <div class="artifactcomment">
 <span class="indicator">&#9658;</span> <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FNewCollectionTypesExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FNewCollectionTypesExplained"
 >Sign in</a> to add a comment
 </div>
 
 
 
 
 <form name="delcom" action="../w/delComment.do" method="POST">
 <input type="hidden" name="sequence_num" value="" >
 <input type="hidden" name="create_time" value="" >
 <input type="hidden" name="mode" value="" >
 <input type="hidden" name="pagename" value="NewCollectionTypesExplained" >
 <input type="hidden" name="token" value="" >
 </form>


 <script src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/prettify/prettify.js"></script>
 <script type="text/javascript">
 prettyPrint();
 </script>

<script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/dit_scripts.js"></script>



  
 
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_core.js"></script>
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_dwiki.js"></script>
 
 
 
 
</div> 

<div id="footer" dir="ltr">
 <div class="text">
 <a href="/projecthosting/terms.html">Terms</a> -
 <a href="http://www.google.com/privacy.html">Privacy</a> -
 <a href="/p/support/">Project Hosting Help</a>
 </div>
</div>
 <div class="hostedBy" style="margin-top: -20px;">
 <span style="vertical-align: top;">Powered by <a href="http://code.google.com/projecthosting/">Google Project Hosting</a></span>
 </div>

 
 


 
 </body>
</html>


