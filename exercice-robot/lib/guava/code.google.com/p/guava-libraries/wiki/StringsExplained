
 



 



 
 
 <!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
 <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" >
 
 <meta name="ROBOTS" content="NOARCHIVE">
 
 <link rel="icon" type="image/vnd.microsoft.icon" href="http://www.gstatic.com/codesite/ph/images/phosting.ico">
 
 
 <link rel="canonical" href="http://code.google.com/p/guava-libraries/wiki/StringsExplained" />
 
 <script type="text/javascript">
 
 (function(){var a=function(b){this.t={};this.tick=function(b,c,d){c=void 0!=d?d:(new Date).getTime();this.t[b]=c};this.tick("start",null,b)},e=new a;window.jstiming={Timer:a,load:e};try{var f=null;window.chrome&&window.chrome.csi&&(f=Math.floor(window.chrome.csi().pageT));null==f&&window.gtbExternal&&(f=window.gtbExternal.pageT());null==f&&window.external&&(f=window.external.pageT);f&&(window.jstiming.pt=f)}catch(g){};})();

 
 
 
 
 var codesite_token = null;
 
 
 var CS_env = {"profileUrl":null,"token":null,"assetHostPath":"http://www.gstatic.com/codesite/ph","domainName":null,"assetVersionPath":"http://www.gstatic.com/codesite/ph/17134919371905794448","projectHomeUrl":"/p/guava-libraries","relativeBaseUrl":"","projectName":"guava-libraries","loggedInUserEmail":null};
 var _gaq = _gaq || [];
 _gaq.push(
 ['siteTracker._setAccount', 'UA-18071-1'],
 ['siteTracker._trackPageview']);
 
 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
 })();
 
 </script>
 
 
 <title>StringsExplained - 
 guava-libraries -
 
 Guava's string utilities, explained - 
 Guava: Google Core Libraries for Java 1.6+ - Google Project Hosting
 </title>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/core.css">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/ph_detail.css" >
 
 
 
 <link type="application/atom+xml" rel="alternate" href="/feeds/p/guava-libraries/gitchanges/basic?repo=wiki&amp;path=/StringsExplained.wiki">
 
 
<!--[if IE]>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/d_ie.css" >
<![endif]-->
 <style type="text/css">
 .menuIcon.off { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -42px }
 .menuIcon.on { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -28px }
 .menuIcon.down { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 0; }
 
 
 #maincol {
 padding-top: 0;
 padding-bottom: 0;
 }

 
 </style>
</head>
<body class="t6">
<script type="text/javascript">
 window.___gcfg = {lang: 'en'};
 (function() 
 {var po = document.createElement("script");
 po.type = "text/javascript"; po.async = true;po.src = "https://apis.google.com/js/plusone.js";
 var s = document.getElementsByTagName("script")[0];
 s.parentNode.insertBefore(po, s);
 })();
</script>
<div class="headbg">

 <div id="gaia">
 

 <span>
 
 
 <a href="#" id="projects-dropdown" onclick="return false;"><u>My favorites</u> <small>&#9660;</small></a>
 | <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FStringsExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FStringsExplained" onclick="_CS_click('/gb/ph/signin');"><u>Sign in</u></a>
 
 </span>

 </div>

 <div class="gbh" style="left: 0pt;"></div>
 <div class="gbh" style="right: 0pt;"></div>
 
 
 <div style="height: 1px"></div>
<!--[if lte IE 7]>
<div style="text-align:center;">
Your version of Internet Explorer is not supported. Try a browser that
contributes to open source, such as <a href="http://www.firefox.com">Firefox</a>,
<a href="http://www.google.com/chrome">Google Chrome</a>, or
<a href="http://code.google.com/chrome/chromeframe/">Google Chrome Frame</a>.
</div>
<![endif]-->



 <table style="padding:0px; margin: 0px 0px 10px 0px; width:100%" cellpadding="0" cellspacing="0"
 itemscope itemtype="http://schema.org/CreativeWork">
 <tr style="height: 58px;">
 
 
 
 <td id="plogo">
 <link itemprop="url" href="/p/guava-libraries">
 <a href="/p/guava-libraries/">
 
 <img src="http://www.gstatic.com/codesite/ph/images/search-48.gif" alt="Logo" itemprop="image">
 
 </a>
 </td>
 
 <td style="padding-left: 0.5em">
 
 <div id="pname">
 <a href="/p/guava-libraries/"><span itemprop="name">guava-libraries</span></a>
 </div>
 
 <div id="psum">
 <a id="project_summary_link"
 href="/p/guava-libraries/"><span itemprop="description">Guava: Google Core Libraries for Java 1.6+</span></a>
 
 </div>
 
 
 </td>
 <td style="white-space:nowrap;text-align:right; vertical-align:bottom;">
 
 <form action="/hosting/search">
 <input size="30" name="q" value="" type="text">
 
 <input type="submit" name="projectsearch" value="Search projects" >
 </form>
 
 </tr>
 </table>

</div>

 
<div id="mt" class="gtb"> 
 <a href="/p/guava-libraries/" class="tab ">Project&nbsp;Home</a>
 
 
 
 
 <a href="/p/guava-libraries/downloads/list" class="tab ">Downloads</a>
 
 
 
 
 
 <a href="/p/guava-libraries/wiki/GuavaExplained?tm=6" class="tab active">Wiki</a>
 
 
 
 
 
 <a href="/p/guava-libraries/issues/list"
 class="tab ">Issues</a>
 
 
 
 
 
 <a href="/p/guava-libraries/source/checkout"
 class="tab ">Source</a>
 
 
 
 
 
 
 
 
 
 
 <div class=gtbc></div>
</div>
<table cellspacing="0" cellpadding="0" width="100%" align="center" border="0" class="st">
 <tr>
 
 
 
 
 <td class="subt">
 <div class="issueDetail">
<div class="isf">
 
 <span class="inIssueList"> 
 <span>Search</span>
 <form action="/p/guava-libraries/w/list" method="GET" style="display:inline">
 <select id="can" name="can" >
 <option disabled="disabled">Search within:</option>
 
 <option value="1" >&nbsp;All wiki pages</option>
 <option value="3" >&nbsp;Featured pages</option>
 <option value="2" selected="selected">&nbsp;Current pages</option>
 
 
 <option value="4" >&nbsp;Deprecated pages</option>
 
 </select>
 <span>for</span>
 <span id="qq"><input type="text" size="38" id="searchq" name="q" value=""
 autocomplete="off" ></span>
 
 
 
 <input type="submit" value="Search" >
 </form>
 </span>

 
 
 
 
 
 
 

</div>
</div>

 </td>
 
 
 
 
 
 
 <td align="right" valign="top" class="bevel-right"></td>
 </tr>
</table>


<script type="text/javascript">
 var cancelBubble = false;
 function _go(url) { document.location = url; }
</script>
<div id="maincol"
 
 
 style="padding:0 3px 3px 0; margin:0"
 
 
>

 






 
<style type="text/css">
 #wikimaincol { padding-top: 6px; padding-left:1em}
 #sidebarcontainer {
 padding: 1.5em 2px 2px 2px;
 min-width: 15em;
 max-width: 20em;
 overflow:hidden;
}
 .sidebartop ul { margin:0 0 0 .5em; padding-left:0 !important; list-style:none}
 .sidebartop ul ul { margin-left:1em; padding-left:0; list-style:none; display:none}
 .sidebartop li { margin:0 0 2px 0; padding:1px; padding-left:14px; cursor:pointer}
 .sidebartop li a { padding:2px}
 .sidebartop li { background: url(http://www.gstatic.com/codesite/ph/images/plus.gif) no-repeat 1px 3px}
 .sidebartop li.treeopen { background: url(http://www.gstatic.com/codesite/ph/images/minus.gif) no-repeat 1px 3px}
 .sidebartop li.treeleaf { background:none}
 .currentpagelink { 
 font-weight: bold;
 text-decoration: none;
 color: black !important; 
 background: #c3d9ff;
 }
 .sidebartop ul.treeleafcontainer { display:block;}
 .sidebarcontent { 
 vertical-align:top;
 padding-right: 3px;
 border-right: 2px solid #ccc;
 }
</style>



 <style type="text/css">
 .delcom { background: #e8e8e8 }
 .commentcontent {
 margin: 2em;
 padding: 0px 10px;
 width: 66em;
 }
 .artifactcomment {
 border-top: 3px solid #c3d9ff;
 }
 #commentform {
 border-top: 3px solid #c3d9ff;
 }
 </style>

<div id="wikipage">
<table>
 <tr>
 
 
 <td class="sidebarcontent">
 <div class="vt expand" id="wikisidebar">
 <div>
 
 <div style="float:right;">
 <a class="ifExpand" style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Hide sidebar"><b>&lsaquo;&lsaquo;</b></a>
 </div>
 <div class="ifCollapse" style="padding:0 2px">
 <a style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Show sidebar"><b>&rsaquo;&rsaquo;</b></a>
 </div>
 
 
 <div id="sidebarcontainer" class="sidebartop ifExpand">
 <ul><li><a href="/p/guava-libraries/wiki/GuavaExplained">Introduction</a> </li><li>Basic Utilities </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained">Using/avoiding null</a> </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained#Optional">Optional</a> </li></ul><li><a href="/p/guava-libraries/wiki/PreconditionsExplained">Preconditions</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained">Ordering</a> </li><ul><li><a href="/p/guava-libraries/wiki/OrderingExplained#Creation">Creation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Manipulation">Manipulation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Application">Application</a> </li></ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained">Object methods</a> </li><ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals">equals</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#hashCode">hashCode</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#toString">toString</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#compare/compareTo">compare/compareTo</a> </li></ul><li><a href="/p/guava-libraries/wiki/ThrowablesExplained">Throwables</a> </li></ul><li>Collections </li><ul><li><a href="/p/guava-libraries/wiki/ImmutableCollectionsExplained">Immutable collections</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained">New collection types</a> </li><ul><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap">Multimap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#BiMap">BiMap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Table">Table</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#ClassToInstanceMap">ClassToInstanceMap</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained">Utility Classes</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Iterables">Iterables</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Lists">Lists</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Sets">Sets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Maps">Maps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multisets">Multisets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multimaps">Multimaps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Tables">Tables</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained">Extension Utilities</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#Forwarding_Decorators">Forwarding Decorators</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#PeekingIterator">PeekingIterator</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#AbstractIterator">AbstractIterator</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/CachesExplained">Caches</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Applicability">Applicability</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Population">Population</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Eviction">Eviction</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Removal_Listeners">Removal Listeners</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Refresh">Refresh</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Timed_Eviction">Timed Eviction</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Size-based_Eviction">Size Caps</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Reference-based_Eviction">Garbage Collection</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Explicit_Removals">Explicit Removals</a> </li></ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Features">Features</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Statistics">Statistics</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained">Functional Idioms</a> </li><ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions_and_Predicates">Obtaining</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Predicates">Using Predicates</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions">Using Functions</a> </li></ul><li>Concurrency </li><ul><li><a href="/p/guava-libraries/wiki/ListenableFutureExplained">ListenableFuture</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained">Service</a> </li><ul><li><a href="/p/guava-libraries/wiki/ServiceExplained#Using_a_Service">Using</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained#Implementations">Implementations</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/StringsExplained">Strings</a> </li><ul><li><a href="/p/guava-libraries/wiki/StringsExplained#Joiner">Joiner</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Splitter">Splitter</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#CharMatcher">CharMatcher</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Charsets">Charsets</a> </li></ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained">Primitives</a> </li><ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Primitive_array_utilities">Primitive arrays</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#General_utility_methods">General utilities</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Byte_conversion_methods">Byte conversion</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Unsigned_support">Unsigned support</a> </li></ul><li><a href="/p/guava-libraries/wiki/RangesExplained">Ranges</a> </li><ul><li><a href="/p/guava-libraries/wiki/RangesExplained#Building_Ranges">Building</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Operations">Operations</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Discrete_Domains">Discrete Domains</a> </li></ul><li><a href="/p/guava-libraries/wiki/IOExplained">I/O</a> </li><li><a href="/p/guava-libraries/wiki/HashingExplained">Hashing</a> </li><ul><li><a href="/p/guava-libraries/wiki/HashingExplained#BloomFilter">BloomFilter</a> </li></ul><li><a href="/p/guava-libraries/wiki/EventBusExplained">EventBus</a> </li><li><a href="/p/guava-libraries/wiki/MathExplained">Math</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Math_on_Integral_Types">Integral</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Checked_Arithmetic">Overflow Checking</a> </li></ul><li><a href="/p/guava-libraries/wiki/MathExplained#Floating-point_arithmetic">Floating Point</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained">Reflection</a> </li><ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained#TypeToken">TypeToken</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReleaseHistory">Releases</a> </li><ul><li><a href="/p/guava-libraries/wiki/Release13">Release 13</a> </li><li><a href="/p/guava-libraries/wiki/Release12">Release 12</a> </li><li><a href="/p/guava-libraries/wiki/Release11">Release 11</a> </li><li><a href="/p/guava-libraries/wiki/Release10">Release 10</a> </li></ul><li>Tips </li><ul><li><a href="/p/guava-libraries/wiki/PhilosophyExplained">Philosophy</a> </li><li><a href="/p/guava-libraries/wiki/UseGuavaInYourBuild">Building with Guava</a> </li><li><a href="/p/guava-libraries/wiki/UsingProGuardWithGuava">Shrinking JARs with ProGuard</a> </li><li><a href="/p/guava-libraries/wiki/ApacheCommonCollectionsEquivalents">Translating from Apache Commons</a> </li><li><a href="/p/guava-libraries/wiki/Compatibility">Guava and Compatibility</a> </li><li><a href="/p/guava-libraries/wiki/IdeaGraveyard">Idea Graveyard</a> </li><li><a href="/p/guava-libraries/wiki/FriendsOfGuava">Friends of Guava</a> </li><li><a href="/p/guava-libraries/wiki/HowToContribute">How to Contribute</a> </li></ul><li><a href="/p/guava-libraries/wiki/GuavaTermsExplained">Glossary</a> </li><li><a href="http://groups.google.com/group/guava-discuss" rel="nofollow">Mailing List</a> </li><li><a href="http://stackoverflow.com/questions/tagged/guava" rel="nofollow">Stack Overflow</a> </li><li><a href="http://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures" rel="nofollow">Footprint of JDK/Guava data structures</a> </li></ul>
 </div>
 </div>
</div>

 </td>
 
 <td style="vertical-align:top; padding-left:5px">
 
 <div id="wikiheader">
 
 <span style="font-size:120%;font-weight:bold">StringsExplained</span>
 &nbsp;
 <div> 
 
 <i>Guava's string utilities, explained</i>
 
 
 <br/>
 
 <a class="label" style="padding-top: 2px"
 href="/p/guava-libraries/w/list?q=label:explained"
 title=""
 >explained</a>
 
 
 
 <div id="wikiauthor" style="float:right">
 Updated <span title="Mon Apr 23 12:44:33 2012">
 Apr 23, 2012</span>
 
 by 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>
 
 </div>
 </div>
 </div>
 
 <div id="wikicontent">
 <div class="vt" id="wikimaincol">
 <h1><a name="Joiner"></a>Joiner<a href="#Joiner" class="section_anchor"></a></h1><p>Joining together a sequence of strings with a separator can be unnecessarily tricky -- but it shouldn&#x27;t be.  If your sequence contains nulls, it can be even harder.  The fluent style of <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Joiner.html" rel="nofollow"><tt>Joiner</tt></a> makes it simple. </p><pre class="prettyprint">Joiner joiner = Joiner.on(&quot;; &quot;).skipNulls();
return joiner.join(&quot;Harry&quot;, null, &quot;Ron&quot;, &quot;Hermione&quot;);</pre><p>returns the string &quot;Harry; Ron; Hermione&quot;.  Alternately, instead of using <tt>skipNulls</tt>, you may specify a string to use instead of null with <tt>useForNull(String)</tt>. </p><p>You may also use <tt>Joiner</tt> on objects, which will be converted using their <tt>toString()</tt> and then joined. </p><pre class="prettyprint">Joiner.on(&quot;,&quot;).join(Arrays.asList(1, 5, 7)); // returns &quot;1,5,7&quot;</pre><p><strong>Warning:</strong> joiner instances are always immutable.  The joiner configuration methods will always return a new <tt>Joiner</tt>, which you must use to get the desired semantics.  This makes any <tt>Joiner</tt> thread safe, and usable as a <tt>static final</tt> constant. </p><h1><a name="Splitter"></a>Splitter<a href="#Splitter" class="section_anchor"></a></h1><p>The built in Java utilities for splitting strings can have some quirky behaviors.  For example, <tt>String.split</tt> silently discards trailing separators, and <tt>StringTokenizer</tt> respects exactly five whitespace characters and nothing else. </p><p>Quiz: <tt>&quot;,a,,b,&quot;.split(&quot;,&quot;)</tt> returns... <ol><li><tt>&quot;&quot;, &quot;a&quot;, &quot;&quot;, &quot;b&quot;, &quot;&quot;</tt> </li><li><tt>null, &quot;a&quot;, null, &quot;b&quot;, null</tt> </li><li><tt>&quot;a&quot;, null, &quot;b&quot;</tt> </li><li><tt>&quot;a&quot;, &quot;b&quot;</tt> </li><li>None of the above </li></ol></p><p>The correct answer is none of the above: <tt>&quot;&quot;, &quot;a&quot;, &quot;&quot;, &quot;b&quot;</tt>.  Only trailing empty strings are skipped.  What is this I don&#x27;t even. </p><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html" rel="nofollow"><tt>Splitter</tt></a> allows complete control over all this confusing behavior using a reassuringly straightforward fluent pattern. </p><pre class="prettyprint">Splitter.on(&#x27;,&#x27;)
       .trimResults()
       .omitEmptyStrings()
       .split(&quot;foo,bar,,   qux&quot;);</pre><p>returns an <tt>Iterable&lt;String&gt;</tt> containing &quot;foo&quot;, &quot;bar&quot;, &quot;qux&quot;.  A <tt>Splitter</tt> may be set to split on any <tt>Pattern</tt>, <tt>char</tt>, <tt>String</tt>, or <tt>CharMatcher</tt>. </p><h3><a name="Base_Factories"></a>Base Factories<a href="#Base_Factories" class="section_anchor"></a></h3><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td><td style="border: 1px solid #ccc; padding: 5px;"> Example </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#on(char)" rel="nofollow"><tt>Splitter.on(char)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Split on occurrences of a specific, individual character. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&#x27;;&#x27;)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#on(com.google.common.base.CharMatcher)" rel="nofollow"><tt>Splitter.on(CharMatcher)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Split on occurrences of any character in some category. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(CharMatcher.BREAKING_WHITESPACE)</tt><br><tt>Splitter.on(CharMatcher.anyOf(&quot;;,.&quot;))</tt></td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#on(java.lang.String)" rel="nofollow"><tt>Splitter.on(String)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Split on a literal <tt>String</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&quot;, &quot;)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#on(java.util.regex.Pattern)" rel="nofollow"><tt>Splitter.on(Pattern)</tt></a><br><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#onPattern(java.lang.String)" rel="nofollow"><tt>Splitter.onPattern(String)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Split on a regular expression. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.onPattern(&quot;\r?\n&quot;)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#fixedLength(int)" rel="nofollow"><tt>Splitter.fixedLength(int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Splits strings into substrings of the specified fixed length.  The last piece can be smaller than <tt>length</tt>, but will never be empty. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.fixedLength(3)</tt> </td></tr> </table></p><h3><a name="Modifiers"></a>Modifiers<a href="#Modifiers" class="section_anchor"></a></h3><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td><td style="border: 1px solid #ccc; padding: 5px;"> Example </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#omitEmptyStrings()" rel="nofollow"><tt>omitEmptyStrings()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Automatically omits empty strings from the result. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&#x27;,&#x27;).omitEmptyStrings().split(&quot;a,,c,d&quot;)</tt> returns <tt>&quot;a&quot;, &quot;c&quot;, &quot;d&quot;</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#trimResults()" rel="nofollow"><tt>trimResults()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Trims whitespace from the results; equivalent to <tt>trimResults(CharMatcher.WHITESPACE)</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&#x27;,&#x27;).trimResults().split(&quot;a, b, c, d&quot;)</tt> returns <tt>&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#trimResults(com.google.common.base.CharMatcher)" rel="nofollow"><tt>trimResults(CharMatcher)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Trims characters matching the specified <tt>CharMatcher</tt> from results. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&#x27;,&#x27;).trimResults(CharMatcher.is(&#x27;_&#x27;)).split(&quot;_a ,_b_ ,c__&quot;)</tt> returns <tt>&quot;a &quot;, &quot;b_ &quot;, &quot;c&quot;</tt>. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Splitter.html#limit(int)" rel="nofollow"><tt>limit(int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Stops splitting after the specified number of strings have been returned.  </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Splitter.on(&#x27;,&#x27;).limit(3).split(&quot;a,b,c,d&quot;)</tt> returns <tt>&quot;a&quot;, &quot;b&quot;, &quot;c,d&quot;</tt> </td></tr> </table></p><p>TODO: Map splitters </p><p>If you wish to get a <tt>List</tt>, just use <tt>Lists.newArrayList(splitter.split(string))</tt> or the like. </p><p><strong>Warning:</strong> splitter instances are always immutable.  The splitter configuration methods will always return a new <tt>Splitter</tt>, which you must use to get the desired semantics.  This makes any <tt>Splitter</tt> thread safe, and usable as a <tt>static final</tt> constant. </p><p><!-- = Escaper =Escaping strings correctly -- converting them into a format safe for inclusion in e.g. an XML document or a Java source file -- can be a tricky business, and critical for security reasons.  Guava provides a flexible API for escaping text, and a number of built-in escapers, in the com.google.common.escape package.
 </p><p>All escapers in Guava extend the [http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/escape/Escaper.html Escaper] abstract class, and support the method String escape(String).  Built-in Escaper instances can be found in several classes, depending on your needs: [http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/html/HtmlEscapers.html HtmlEscapers], [http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/xml/XmlEscapers.html XmlEscapers], [http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/escape/SourceCodeEscapers.html SourceCodeEscapers], [http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/net/UriEscapers.html UriEscapers], or you can build your own with [http://docs.guava-libraries.googlecode.com/git/javadoc/index.html an Escapers.Builder].  To inspect an Escaper, you can use Escapers.computeReplacement to find the replacement string for a given character.
 --> </p><h1><a name="CharMatcher"></a>CharMatcher<a href="#CharMatcher" class="section_anchor"></a></h1><p>In olden times, our <tt>StringUtil</tt> class grew unchecked, and had many methods like these: <table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>allAscii</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>collapse</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>collapseControlChars</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>collapseWhitespace</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>indexOfChars</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>lastIndexNotOf</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>numSharedChars</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>removeChars</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>removeCrLf</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>replaceChars</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>retainAllChars</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>strip</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>stripAndCollapse</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>stripNonDigits</tt> </td></tr> </table></p><p>They represent a partial cross product of two notions: </p><ol><li>what constitutes a &quot;matching&quot; character? </li><li>what to do with those &quot;matching&quot; characters? </li></ol><p>To simplify this morass, we developed <tt>CharMatcher</tt>. </p><p>Intuitively, you can think of a <tt>CharMatcher</tt> as representing a particular class of characters, like digits or whitespace.  Practically speaking, a <tt>CharMatcher</tt> is just a boolean predicate on characters -- indeed, <tt>CharMatcher</tt> implements <a href="/p/guava-libraries/wiki/FunctionalExplained#Predicate">Predicate&lt;Character&gt;</a> -- but because it is so common to refer to &quot;all whitespace characters&quot; or &quot;all lowercase letters,&quot; Guava provides this specialized syntax and API for characters. </p><p>But the utility of a <tt>CharMatcher</tt> is in the <i>operations</i> it lets you perform on occurrences of the specified class of characters: trimming, collapsing, removing, retaining, and much more.  An object of type <tt>CharMatcher</tt> represents notion 1: what constitutes a matching character?  It then provides many operations answering notion 2: what to do with those matching characters?  The result is that API complexity increases linearly for quadratically increasing flexibility and power.  Yay! </p><pre class="prettyprint">String noControl = CharMatcher.JAVA_ISO_CONTROL.removeFrom(string); // remove control characters
String theDigits = CharMatcher.DIGIT.retainFrom(string); // only the digits
String spaced = CharMatcher.WHITESPACE.trimAndCollapseFrom(string, &#x27; &#x27;);
  // trim whitespace at ends, and replace/collapse whitespace into single spaces
String noDigits = CharMatcher.JAVA_DIGIT.replaceFrom(string, &quot;*&quot;); // star out all digits
String lowerAndDigit = CharMatcher.JAVA_DIGIT.or(CharMatcher.JAVA_LOWER_CASE).retainFrom(string);
  // eliminate all characters that aren&#x27;t digits or lowercase</pre><p><strong>Note:</strong> <tt>CharMatcher</tt> deals only with <tt>char</tt> values; it does not understand supplementary Unicode code points in the range 0x10000 to 0x10FFFF. Such logical characters are encoded into a <tt>String</tt> using surrogate pairs, and a <tt>CharMatcher</tt> treats these just as two separate characters. </p><h2><a name="Obtaining_CharMatchers"></a>Obtaining CharMatchers<a href="#Obtaining_CharMatchers" class="section_anchor"></a></h2><p>Many needs can be satisfied by the provided <tt>CharMatcher</tt> constants: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#ANY" rel="nofollow"><tt>ANY</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#NONE" rel="nofollow"><tt>NONE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#WHITESPACE" rel="nofollow"><tt>WHITESPACE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#BREAKING_WHITESPACE" rel="nofollow"><tt>BREAKING_WHITESPACE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#INVISIBLE" rel="nofollow"><tt>INVISIBLE</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#DIGIT" rel="nofollow"><tt>DIGIT</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_LETTER" rel="nofollow"><tt>JAVA_LETTER</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_DIGIT" rel="nofollow"><tt>JAVA_DIGIT</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_LETTER_OR_DIGIT" rel="nofollow"><tt>JAVA_LETTER_OR_DIGIT</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_ISO_CONTROL" rel="nofollow"><tt>JAVA_ISO_CONTROL</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_LOWER_CASE" rel="nofollow"><tt>JAVA_LOWER_CASE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#JAVA_UPPER_CASE" rel="nofollow"><tt>JAVA_UPPER_CASE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#ASCII" rel="nofollow"><tt>ASCII</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#SINGLE_WIDTH" rel="nofollow"><tt>SINGLE_WIDTH</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> </td></tr> </table></p><p>Other common ways to obtain a <tt>CharMatcher</tt> include: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#anyOf(java.lang.CharSequence)" rel="nofollow"><tt>anyOf(CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Specify all the characters you wish matched.  For example, <tt>CharMatcher.anyOf(&quot;aeiou&quot;)</tt> matches lowercase English vowels. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#is(char)" rel="nofollow"><tt>is(char)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Specify exactly one character to match.</td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#inRange(char, char)" rel="nofollow"><tt>inRange(char, char)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Specify a range of characters to match, e.g. <tt>CharMatcher.inRange(&#x27;a&#x27;, &#x27;z&#x27;)</tt>. </td></tr> </table></p><p>Additionally, <tt>CharMatcher</tt> has <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#negate()" rel="nofollow"><tt>negate()</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#and(com.google.common.base.CharMatcher)" rel="nofollow"><tt>and(CharMatcher)</tt></a>, and <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#or(com.google.common.base.CharMatcher)" rel="nofollow"><tt>or(CharMatcher)</tt></a>.  These provide simple boolean operations on <tt>CharMatcher</tt>. </p><h2><a name="Using_CharMatchers"></a>Using CharMatchers<a href="#Using_CharMatchers" class="section_anchor"></a></h2><p><tt>CharMatcher</tt> provides a <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#method_summary" rel="nofollow">wide variety</a> of methods to operate on occurrences of the specified characters in any <tt>CharSequence</tt>.  There are more methods provided than we can list here, but some of the most commonly used are: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#collapseFrom(java.lang.CharSequence, char)" rel="nofollow"><tt>collapseFrom(CharSequence, char)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Replace each group of consecutive matched characters with the specified character.  For example, <tt>WHITESPACE.collapseFrom(string, &#x27; &#x27;)</tt> collapses whitespaces down to a single space. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#matchesAllOf(java.lang.CharSequence)" rel="nofollow"><tt>matchesAllOf(CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Test if this matcher matches all characters in the sequence.  For example, <tt>ASCII.matchesAllOf(string)</tt> tests if all characters in the string are ASCII. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#removeFrom(java.lang.CharSequence)" rel="nofollow"><tt>removeFrom(CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes matching characters from the sequence. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#retainFrom(java.lang.CharSequence)" rel="nofollow"><tt>retainFrom(CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes all non-matching characters from the sequence. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#trimFrom(java.lang.CharSequence)" rel="nofollow"><tt>trimFrom(CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes leading and trailing matching characters. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CharMatcher.html#replaceFrom(java.lang.CharSequence, java.lang.CharSequence)" rel="nofollow"><tt>replaceFrom(CharSequence, CharSequence)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Replace matching characters with a given sequence. </td></tr> </table></p><p>(Note: all of these methods return a <tt>String</tt>, except for <tt>matchesAllOf</tt>, which returns a <tt>boolean</tt>.) </p><h1><a name="Charsets"></a>Charsets<a href="#Charsets" class="section_anchor"></a></h1><p>Don&#x27;t do this: </p><pre class="prettyprint">try {
  bytes = string.getBytes(&quot;UTF-8&quot;);
} catch (UnsupportedEncodingException e) {
  // how can this possibly happen?
  throw new AssertionError(e);
}</pre><p>Do this instead: </p><pre class="prettyprint">bytes = string.getBytes(Charsets.UTF_8);</pre><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Charsets.html" rel="nofollow"><tt>Charsets</tt></a> provides constant references to the six standard <tt>Charset</tt> implementations guaranteed to be supported by all Java platform implementations.  Use them instead of referring to charsets by their names. </p><p>TODO: an explanation of charsets and when to use them </p><h1><a name="CaseFormat"></a>CaseFormat<a href="#CaseFormat" class="section_anchor"></a></h1><p><tt>CaseFormat</tt> is a handy little class for converting between ASCII case conventions -- like, for example, naming conventions for programming languages.  Supported formats include: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Format </td><td style="border: 1px solid #ccc; padding: 5px;"> Example </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CaseFormat.html#LOWER_CAMEL" rel="nofollow"><tt>LOWER_CAMEL</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>lowerCamel</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CaseFormat.html#LOWER_HYPHEN" rel="nofollow"><tt>LOWER_HYPHEN</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>lower-hyphen</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CaseFormat.html#LOWER_UNDERSCORE" rel="nofollow"><tt>LOWER_UNDERSCORE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>lower_underscore</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CaseFormat.html#UPPER_CAMEL" rel="nofollow"><tt>UPPER_CAMEL</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>UpperCamel</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/CaseFormat.html#UPPER_UNDERSCORE" rel="nofollow"><tt>UPPER_UNDERSCORE</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>UPPER_UNDERSCORE</tt> </td></tr> </table></p><p>Using it is relatively straightforward: </p><pre class="prettyprint">CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, &quot;CONSTANT_NAME&quot;)); // returns &quot;constantName&quot;</pre><p>We find this especially useful, for example, when writing programs that generate other programs. </p>
 </div>
 </div>
 </td><tr>
</table>
 </div>


 
 <div id="wikicommentcol">
 


 
 
 
 
 

<div class="collapse">


 


<div id="commentlist">

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/113720998367857347981/">ygt...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Wed Apr 11 09:45:38 2012">Apr 11, 2012</span>
 <div>
<div class="commentcontent">
<p>Is the example code to eliminate all characters except digits correct? I wonder if the code below: </p><pre class="prettyprint">String lowerAndDigit = CharMatcher?.or(CharMatcher?.JAVA_DIGIT, CharMatcher?.JAVA_LOWER_CASE).retainFrom(string);</pre><p>should be like this: </p><pre class="prettyprint">String lowerAndDigit = CharMatcher?.JAVA_DIGIT.or(CharMatcher?.JAVA_LOWER_CASE).retainFrom(string);</pre><p>Thanks! </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/112437403015103205033/">pukka...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Sun Aug 26 23:11:38 2012">Aug 26, 2012</span>
 <div>
<div class="commentcontent">
<p>The newly introduced <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/StandardCharsets.html" rel="nofollow">StandardCharsets</a> class in JDK 7 provides equivalent constants for the six standard charsets as provided by the Charsets class. </p>
</div>
 
 
 </div>
 </div>
 

</div>
</div>

 


 <script type="text/javascript">
 function delComment(sequence_num, create_time, delete_mode) {
 var f = document.forms["delcom"];
 f.sequence_num.value = sequence_num;
 f.create_time.value = create_time;
 f.mode.value = delete_mode;
 f.submit();
 return false;
 }
 </script>


 </div>
 
 
 
 
 <br>
 <div class="artifactcomment">
 <span class="indicator">&#9658;</span> <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FStringsExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FStringsExplained"
 >Sign in</a> to add a comment
 </div>
 
 
 
 
 <form name="delcom" action="../w/delComment.do" method="POST">
 <input type="hidden" name="sequence_num" value="" >
 <input type="hidden" name="create_time" value="" >
 <input type="hidden" name="mode" value="" >
 <input type="hidden" name="pagename" value="StringsExplained" >
 <input type="hidden" name="token" value="" >
 </form>


 <script src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/prettify/prettify.js"></script>
 <script type="text/javascript">
 prettyPrint();
 </script>

<script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/dit_scripts.js"></script>



  
 
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_core.js"></script>
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_dwiki.js"></script>
 
 
 
 
</div> 

<div id="footer" dir="ltr">
 <div class="text">
 <a href="/projecthosting/terms.html">Terms</a> -
 <a href="http://www.google.com/privacy.html">Privacy</a> -
 <a href="/p/support/">Project Hosting Help</a>
 </div>
</div>
 <div class="hostedBy" style="margin-top: -20px;">
 <span style="vertical-align: top;">Powered by <a href="http://code.google.com/projecthosting/">Google Project Hosting</a></span>
 </div>

 
 


 
 
 <script type="text/javascript">_CS_reportToCsi();</script>
 
 </body>
</html>


