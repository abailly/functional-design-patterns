
 



 



 
 
 <!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
 <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" >
 
 <meta name="ROBOTS" content="NOARCHIVE">
 
 <link rel="icon" type="image/vnd.microsoft.icon" href="http://www.gstatic.com/codesite/ph/images/phosting.ico">
 
 
 <link rel="canonical" href="http://code.google.com/p/guava-libraries/wiki/CollectionUtilitiesExplained" />
 
 <script type="text/javascript">
 
 
 
 
 var codesite_token = null;
 
 
 var CS_env = {"profileUrl":null,"token":null,"assetHostPath":"http://www.gstatic.com/codesite/ph","domainName":null,"assetVersionPath":"http://www.gstatic.com/codesite/ph/17134919371905794448","projectHomeUrl":"/p/guava-libraries","relativeBaseUrl":"","projectName":"guava-libraries","loggedInUserEmail":null};
 var _gaq = _gaq || [];
 _gaq.push(
 ['siteTracker._setAccount', 'UA-18071-1'],
 ['siteTracker._trackPageview']);
 
 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
 })();
 
 </script>
 
 
 <title>CollectionUtilitiesExplained - 
 guava-libraries -
 
 Guava's static collections utilities, explained. - 
 Guava: Google Core Libraries for Java 1.6+ - Google Project Hosting
 </title>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/core.css">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/ph_detail.css" >
 
 
 
 <link type="application/atom+xml" rel="alternate" href="/feeds/p/guava-libraries/gitchanges/basic?repo=wiki&amp;path=/CollectionUtilitiesExplained.wiki">
 
 
<!--[if IE]>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/d_ie.css" >
<![endif]-->
 <style type="text/css">
 .menuIcon.off { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -42px }
 .menuIcon.on { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -28px }
 .menuIcon.down { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 0; }
 
 
 #maincol {
 padding-top: 0;
 padding-bottom: 0;
 }

 
 </style>
</head>
<body class="t6">
<script type="text/javascript">
 window.___gcfg = {lang: 'en'};
 (function() 
 {var po = document.createElement("script");
 po.type = "text/javascript"; po.async = true;po.src = "https://apis.google.com/js/plusone.js";
 var s = document.getElementsByTagName("script")[0];
 s.parentNode.insertBefore(po, s);
 })();
</script>
<div class="headbg">

 <div id="gaia">
 

 <span>
 
 
 <a href="#" id="projects-dropdown" onclick="return false;"><u>My favorites</u> <small>&#9660;</small></a>
 | <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionUtilitiesExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionUtilitiesExplained" onclick="_CS_click('/gb/ph/signin');"><u>Sign in</u></a>
 
 </span>

 </div>

 <div class="gbh" style="left: 0pt;"></div>
 <div class="gbh" style="right: 0pt;"></div>
 
 
 <div style="height: 1px"></div>
<!--[if lte IE 7]>
<div style="text-align:center;">
Your version of Internet Explorer is not supported. Try a browser that
contributes to open source, such as <a href="http://www.firefox.com">Firefox</a>,
<a href="http://www.google.com/chrome">Google Chrome</a>, or
<a href="http://code.google.com/chrome/chromeframe/">Google Chrome Frame</a>.
</div>
<![endif]-->



 <table style="padding:0px; margin: 0px 0px 10px 0px; width:100%" cellpadding="0" cellspacing="0"
 itemscope itemtype="http://schema.org/CreativeWork">
 <tr style="height: 58px;">
 
 
 
 <td id="plogo">
 <link itemprop="url" href="/p/guava-libraries">
 <a href="/p/guava-libraries/">
 
 <img src="http://www.gstatic.com/codesite/ph/images/search-48.gif" alt="Logo" itemprop="image">
 
 </a>
 </td>
 
 <td style="padding-left: 0.5em">
 
 <div id="pname">
 <a href="/p/guava-libraries/"><span itemprop="name">guava-libraries</span></a>
 </div>
 
 <div id="psum">
 <a id="project_summary_link"
 href="/p/guava-libraries/"><span itemprop="description">Guava: Google Core Libraries for Java 1.6+</span></a>
 
 </div>
 
 
 </td>
 <td style="white-space:nowrap;text-align:right; vertical-align:bottom;">
 
 <form action="/hosting/search">
 <input size="30" name="q" value="" type="text">
 
 <input type="submit" name="projectsearch" value="Search projects" >
 </form>
 
 </tr>
 </table>

</div>

 
<div id="mt" class="gtb"> 
 <a href="/p/guava-libraries/" class="tab ">Project&nbsp;Home</a>
 
 
 
 
 <a href="/p/guava-libraries/downloads/list" class="tab ">Downloads</a>
 
 
 
 
 
 <a href="/p/guava-libraries/wiki/GuavaExplained?tm=6" class="tab active">Wiki</a>
 
 
 
 
 
 <a href="/p/guava-libraries/issues/list"
 class="tab ">Issues</a>
 
 
 
 
 
 <a href="/p/guava-libraries/source/checkout"
 class="tab ">Source</a>
 
 
 
 
 
 
 
 
 
 
 <div class=gtbc></div>
</div>
<table cellspacing="0" cellpadding="0" width="100%" align="center" border="0" class="st">
 <tr>
 
 
 
 
 <td class="subt">
 <div class="issueDetail">
<div class="isf">
 
 <span class="inIssueList"> 
 <span>Search</span>
 <form action="/p/guava-libraries/w/list" method="GET" style="display:inline">
 <select id="can" name="can" >
 <option disabled="disabled">Search within:</option>
 
 <option value="1" >&nbsp;All wiki pages</option>
 <option value="3" >&nbsp;Featured pages</option>
 <option value="2" selected="selected">&nbsp;Current pages</option>
 
 
 <option value="4" >&nbsp;Deprecated pages</option>
 
 </select>
 <span>for</span>
 <span id="qq"><input type="text" size="38" id="searchq" name="q" value=""
 autocomplete="off" ></span>
 
 
 
 <input type="submit" value="Search" >
 </form>
 </span>

 
 
 
 
 
 
 

</div>
</div>

 </td>
 
 
 
 
 
 
 <td align="right" valign="top" class="bevel-right"></td>
 </tr>
</table>


<script type="text/javascript">
 var cancelBubble = false;
 function _go(url) { document.location = url; }
</script>
<div id="maincol"
 
 
 style="padding:0 3px 3px 0; margin:0"
 
 
>

 






 
<style type="text/css">
 #wikimaincol { padding-top: 6px; padding-left:1em}
 #sidebarcontainer {
 padding: 1.5em 2px 2px 2px;
 min-width: 15em;
 max-width: 20em;
 overflow:hidden;
}
 .sidebartop ul { margin:0 0 0 .5em; padding-left:0 !important; list-style:none}
 .sidebartop ul ul { margin-left:1em; padding-left:0; list-style:none; display:none}
 .sidebartop li { margin:0 0 2px 0; padding:1px; padding-left:14px; cursor:pointer}
 .sidebartop li a { padding:2px}
 .sidebartop li { background: url(http://www.gstatic.com/codesite/ph/images/plus.gif) no-repeat 1px 3px}
 .sidebartop li.treeopen { background: url(http://www.gstatic.com/codesite/ph/images/minus.gif) no-repeat 1px 3px}
 .sidebartop li.treeleaf { background:none}
 .currentpagelink { 
 font-weight: bold;
 text-decoration: none;
 color: black !important; 
 background: #c3d9ff;
 }
 .sidebartop ul.treeleafcontainer { display:block;}
 .sidebarcontent { 
 vertical-align:top;
 padding-right: 3px;
 border-right: 2px solid #ccc;
 }
</style>



 <style type="text/css">
 .delcom { background: #e8e8e8 }
 .commentcontent {
 margin: 2em;
 padding: 0px 10px;
 width: 66em;
 }
 .artifactcomment {
 border-top: 3px solid #c3d9ff;
 }
 #commentform {
 border-top: 3px solid #c3d9ff;
 }
 </style>

<div id="wikipage">
<table>
 <tr>
 
 
 <td class="sidebarcontent">
 <div class="vt expand" id="wikisidebar">
 <div>
 
 <div style="float:right;">
 <a class="ifExpand" style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Hide sidebar"><b>&lsaquo;&lsaquo;</b></a>
 </div>
 <div class="ifCollapse" style="padding:0 2px">
 <a style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Show sidebar"><b>&rsaquo;&rsaquo;</b></a>
 </div>
 
 
 <div id="sidebarcontainer" class="sidebartop ifExpand">
 <ul><li><a href="/p/guava-libraries/wiki/GuavaExplained">Introduction</a> </li><li>Basic Utilities </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained">Using/avoiding null</a> </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained#Optional">Optional</a> </li></ul><li><a href="/p/guava-libraries/wiki/PreconditionsExplained">Preconditions</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained">Ordering</a> </li><ul><li><a href="/p/guava-libraries/wiki/OrderingExplained#Creation">Creation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Manipulation">Manipulation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Application">Application</a> </li></ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained">Object methods</a> </li><ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals">equals</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#hashCode">hashCode</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#toString">toString</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#compare/compareTo">compare/compareTo</a> </li></ul><li><a href="/p/guava-libraries/wiki/ThrowablesExplained">Throwables</a> </li></ul><li>Collections </li><ul><li><a href="/p/guava-libraries/wiki/ImmutableCollectionsExplained">Immutable collections</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained">New collection types</a> </li><ul><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap">Multimap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#BiMap">BiMap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Table">Table</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#ClassToInstanceMap">ClassToInstanceMap</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained">Utility Classes</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Iterables">Iterables</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Lists">Lists</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Sets">Sets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Maps">Maps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multisets">Multisets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multimaps">Multimaps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Tables">Tables</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained">Extension Utilities</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#Forwarding_Decorators">Forwarding Decorators</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#PeekingIterator">PeekingIterator</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#AbstractIterator">AbstractIterator</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/CachesExplained">Caches</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Applicability">Applicability</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Population">Population</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Eviction">Eviction</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Removal_Listeners">Removal Listeners</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Refresh">Refresh</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Timed_Eviction">Timed Eviction</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Size-based_Eviction">Size Caps</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Reference-based_Eviction">Garbage Collection</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Explicit_Removals">Explicit Removals</a> </li></ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Features">Features</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Statistics">Statistics</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained">Functional Idioms</a> </li><ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions_and_Predicates">Obtaining</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Predicates">Using Predicates</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions">Using Functions</a> </li></ul><li>Concurrency </li><ul><li><a href="/p/guava-libraries/wiki/ListenableFutureExplained">ListenableFuture</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained">Service</a> </li><ul><li><a href="/p/guava-libraries/wiki/ServiceExplained#Using_a_Service">Using</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained#Implementations">Implementations</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/StringsExplained">Strings</a> </li><ul><li><a href="/p/guava-libraries/wiki/StringsExplained#Joiner">Joiner</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Splitter">Splitter</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#CharMatcher">CharMatcher</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Charsets">Charsets</a> </li></ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained">Primitives</a> </li><ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Primitive_array_utilities">Primitive arrays</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#General_utility_methods">General utilities</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Byte_conversion_methods">Byte conversion</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Unsigned_support">Unsigned support</a> </li></ul><li><a href="/p/guava-libraries/wiki/RangesExplained">Ranges</a> </li><ul><li><a href="/p/guava-libraries/wiki/RangesExplained#Building_Ranges">Building</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Operations">Operations</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Discrete_Domains">Discrete Domains</a> </li></ul><li><a href="/p/guava-libraries/wiki/IOExplained">I/O</a> </li><li><a href="/p/guava-libraries/wiki/HashingExplained">Hashing</a> </li><ul><li><a href="/p/guava-libraries/wiki/HashingExplained#BloomFilter">BloomFilter</a> </li></ul><li><a href="/p/guava-libraries/wiki/EventBusExplained">EventBus</a> </li><li><a href="/p/guava-libraries/wiki/MathExplained">Math</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Math_on_Integral_Types">Integral</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Checked_Arithmetic">Overflow Checking</a> </li></ul><li><a href="/p/guava-libraries/wiki/MathExplained#Floating-point_arithmetic">Floating Point</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained">Reflection</a> </li><ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained#TypeToken">TypeToken</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReleaseHistory">Releases</a> </li><ul><li><a href="/p/guava-libraries/wiki/Release13">Release 13</a> </li><li><a href="/p/guava-libraries/wiki/Release12">Release 12</a> </li><li><a href="/p/guava-libraries/wiki/Release11">Release 11</a> </li><li><a href="/p/guava-libraries/wiki/Release10">Release 10</a> </li></ul><li>Tips </li><ul><li><a href="/p/guava-libraries/wiki/PhilosophyExplained">Philosophy</a> </li><li><a href="/p/guava-libraries/wiki/UseGuavaInYourBuild">Building with Guava</a> </li><li><a href="/p/guava-libraries/wiki/UsingProGuardWithGuava">Shrinking JARs with ProGuard</a> </li><li><a href="/p/guava-libraries/wiki/ApacheCommonCollectionsEquivalents">Translating from Apache Commons</a> </li><li><a href="/p/guava-libraries/wiki/Compatibility">Guava and Compatibility</a> </li><li><a href="/p/guava-libraries/wiki/IdeaGraveyard">Idea Graveyard</a> </li><li><a href="/p/guava-libraries/wiki/FriendsOfGuava">Friends of Guava</a> </li><li><a href="/p/guava-libraries/wiki/HowToContribute">How to Contribute</a> </li></ul><li><a href="/p/guava-libraries/wiki/GuavaTermsExplained">Glossary</a> </li><li><a href="http://groups.google.com/group/guava-discuss" rel="nofollow">Mailing List</a> </li><li><a href="http://stackoverflow.com/questions/tagged/guava" rel="nofollow">Stack Overflow</a> </li><li><a href="http://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures" rel="nofollow">Footprint of JDK/Guava data structures</a> </li></ul>
 </div>
 </div>
</div>

 </td>
 
 <td style="vertical-align:top; padding-left:5px">
 
 <div id="wikiheader">
 
 <span style="font-size:120%;font-weight:bold">CollectionUtilitiesExplained</span>
 &nbsp;
 <div> 
 
 <i>Guava's static collections utilities, explained.</i>
 
 
 <br/>
 
 <a class="label" style="padding-top: 2px"
 href="/p/guava-libraries/w/list?q=label:explained"
 title=""
 >explained</a>
 
 
 
 <div id="wikiauthor" style="float:right">
 Updated <span title="Mon Jun 11 09:41:13 2012">
 Jun 11, 2012</span>
 
 by 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>
 
 </div>
 </div>
 </div>
 
 <div id="wikicontent">
 <div class="vt" id="wikimaincol">
 <p>TODO: Queues, Tables </p><p>Any programmer with experience with the JDK Collections Framework knows and loves the utilities available in <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html" rel="nofollow"><tt>java.util.Collections</tt></a>.  Guava provides many more utilities along these lines: static methods applicable to all collections.  These are among the most popular and mature parts of Guava. </p><p>Methods corresponding to a particular interface are grouped in a relatively intuitive manner: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Interface </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK or Guava? </td><td style="border: 1px solid #ccc; padding: 5px;"> Corresponding Guava utility class </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Collections2.html" rel="nofollow"><tt>Collections2</tt></a> (avoiding conflict with <tt>java.util.Collections</tt>) </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>List</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Lists.html" rel="nofollow"><tt>Lists</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Set</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Sets.html" rel="nofollow"><tt>Sets</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>SortedSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Sets.html" rel="nofollow"><tt>Sets</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Map</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Maps.html" rel="nofollow"><tt>Maps</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>SortedMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Maps.html" rel="nofollow"><tt>Maps</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Queue</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> JDK </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Queues.html" rel="nofollow"><tt>Queues</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Guava </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html" rel="nofollow"><tt>Multisets</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap">Multimap</a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Guava </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html" rel="nofollow"><tt>Multimaps</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#BiMap">BiMap</a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Guava </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html" rel="nofollow"><tt>Maps</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Table">Table</a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Guava </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html" rel="nofollow"><tt>Tables</tt></a> </td></tr> </table></p><p><strong><i>Looking for transform, filter, and the like?  That stuff is <a href="/p/guava-libraries/wiki/FunctionalExplained">here</a>, under functional idioms.</i></strong> </p><h1><a name="Static_constructors"></a>Static constructors<a href="#Static_constructors" class="section_anchor"></a></h1><p>Before JDK 7, constructing new generic collections requires unpleasant code duplication: </p><pre class="prettyprint">List&lt;TypeThatsTooLongForItsOwnGood&gt; list = new ArrayList&lt;TypeThatsTooLongForItsOwnGood&gt;();</pre><p>I think we can all agree that this is unpleasant.  Guava provides static methods that use generics to infer the type on the right side: </p><pre class="prettyprint">List&lt;TypeThatsTooLongForItsOwnGood&gt; list = Lists.newArrayList();
Map&lt;KeyType, LongishValueType&gt; map = Maps.newLinkedHashMap();</pre><p>To be sure, the diamond operator in JDK 7 makes this less of a hassle: </p><pre class="prettyprint">List&lt;TypeThatsTooLongForItsOwnGood&gt; list = new ArrayList&lt;&gt;();</pre><p>But Guava goes further than this.  With the factory method pattern, we can initialize collections with their starting elements very conveniently. </p><pre class="prettyprint">Set&lt;Type&gt; copySet = Sets.newHashSet(elements);
List&lt;String&gt; theseElements = Lists.newArrayList(&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;);</pre><p>Additionally, with the ability to name factory methods (Effective Java item 1), we can improve the readability of initializing collections to sizes: </p><pre class="prettyprint">List&lt;Type&gt; exactly100 = Lists.newArrayListWithCapacity(100);
List&lt;Type&gt; approx100 = Lists.newArrayListWithExpectedSize(100);
Set&lt;Type&gt; approx100Set = Sets.newHashSetWithExpectedSize(100);</pre><p>The precise static factory methods provided are listed with their corresponding utility classes below. </p><p><i>Note:</i> New collection types introduced by Guava don&#x27;t expose raw constructors, or have initializers in the utility classes.  Instead, they expose static factory methods directly, for example: </p><pre class="prettyprint">Multiset&lt;String&gt; multiset = HashMultiset.create();</pre><h1><a name="Iterables"></a>Iterables<a href="#Iterables" class="section_anchor"></a></h1><p>Whenever possible, Guava prefers to provide utilities accepting an <tt>Iterable</tt> rather than a <tt>Collection</tt>.  Here at Google, it&#x27;s not out of the ordinary to encounter a &quot;collection&quot; that isn&#x27;t actually stored in main memory, but is being gathered from a database, or from another data center, and can&#x27;t support operations like <tt>size()</tt> without actually grabbing all of the elements. </p><p>As a result, many of the operations you might expect to see supported for all collections can be found in <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html" rel="nofollow"><tt>Iterables</tt></a>.  Additionally, most <tt>Iterables</tt> methods have a corresponding version in <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterators.html" rel="nofollow"><tt>Iterators</tt></a> that accepts the raw iterator. </p><p>The overwhelming majority of operations in the <tt>Iterables</tt> class are <i>lazy</i>: they only advance the backing iteration when absolutely necessary.  Methods that themselves return <tt>Iterables</tt> return lazily computed views, rather than explicitly constructing a collection in memory. </p><p>As of Guava 12, <tt>Iterables</tt> is supplemented by the <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html" rel="nofollow"><tt>FluentIterable</tt></a> class, which wraps an <tt>Iterable</tt> and provides a &quot;fluent&quot; syntax for many of these operations. </p><p>The following is a selection of the most commonly used utilities, although many of the more &quot;functional&quot; methods in <tt>Iterables</tt> are discussed in <a href="/p/guava-libraries/wiki/FunctionalExplained">Guava functional idioms</a>. </p><h3><a name="General"></a>General<a href="#General" class="section_anchor"></a></h3><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td><td style="border: 1px solid #ccc; padding: 5px;"> See Also </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#concat(java.lang.Iterable)" rel="nofollow"><tt>concat(Iterable&lt;Iterable&gt;)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns a lazy view of the concatenation of several iterables. </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#concat(java.lang.Iterable...)" rel="nofollow"><tt>concat(Iterable...)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#frequency(java.lang.Iterable, java.lang.Object)" rel="nofollow"><tt>frequency(Iterable, Object)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the number of occurrences of the object. </td><td style="border: 1px solid #ccc; padding: 5px;"> Compare <tt>Collections.frequency(Collection, Object)</tt>; see <a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#partition(java.lang.Iterable, int)" rel="nofollow"><tt>partition(Iterable, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an unmodifiable view of the iterable partitioned into chunks of the specified size. </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#partition(java.util.List, int)" rel="nofollow"><tt>Lists.partition(List, int)</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#paddedPartition(java.lang.Iterable, int)" rel="nofollow"><tt>paddedPartition(Iterable, int)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getFirst(java.lang.Iterable, T)" rel="nofollow"><tt>getFirst(Iterable, T default)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the first element of the iterable, or the default value if empty. </td><td style="border: 1px solid #ccc; padding: 5px;"> Compare <tt>Iterable.iterator().next()</tt><br><a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#first()" rel="nofollow"><tt>FluentIterable.first()</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getLast(java.lang.Iterable)" rel="nofollow"><tt>getLast(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the last element of the iterable, or fails fast with a <tt>NoSuchElementException</tt> if it&#x27;s empty.  </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getLast(java.lang.Iterable, T)" rel="nofollow"><tt>getLast(Iterable, T default)</tt></a><br><a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#last()" rel="nofollow"><tt>FluentIterable.last()</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#elementsEqual(java.lang.Iterable, java.lang.Iterable)" rel="nofollow"><tt>elementsEqual(Iterable, Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns true if the iterables have the same elements in the same order. </td><td style="border: 1px solid #ccc; padding: 5px;"> Compare <tt>List.equals(Object)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#unmodifiableIterable(java.lang.Iterable)" rel="nofollow"><tt>unmodifiableIterable(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an unmodifiable view of the iterable. </td><td style="border: 1px solid #ccc; padding: 5px;"> Compare <tt>Collections.unmodifiableCollection(Collection)</tt> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#limit(java.lang.Iterable, int)" rel="nofollow"><tt>limit(Iterable, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an <tt>Iterable</tt> returning at most the specified number of elements. </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#limit(int)" rel="nofollow"><tt>FluentIterable.limit(int)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getOnlyElement(java.lang.Iterable)" rel="nofollow"><tt>getOnlyElement(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the only element in <tt>Iterable</tt>.  Fails fast if the iterable is empty or has multiple elements.  </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getOnlyElement(java.lang.Iterable, T)" rel="nofollow"><tt>getOnlyElement(Iterable, T default)</tt></a> </td></tr> </table></p><pre class="prettyprint">Iterable&lt;Integer&gt; concatenated = Iterables.concat(
  Ints.asList(1, 2, 3),
  Ints.asList(4, 5, 6));
// concatenated has elements 1, 2, 3, 4, 5, 6

String lastAdded = Iterables.getLast(myLinkedHashSet);

String theElement = Iterables.getOnlyElement(thisSetIsDefinitelyASingleton);
  // if this set isn&#x27;t a singleton, something is wrong!</pre><h3><a name="Collection-Like"></a>Collection-Like<a href="#Collection-Like" class="section_anchor"></a></h3><p>Typically, collections support these operations naturally on other collections, but not on iterables. </p><p><i>Each of these operations delegates to the corresponding <tt>Collection</tt> interface method when the input is actually a <tt>Collection</tt>.</i>  For example, if <tt>Iterables.size</tt> is passed a <tt>Collection</tt>, it will call the <tt>Collection.size</tt> method instead of walking through the iterator. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Analogous <tt>Collection</tt> method </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>FluentIterable</tt> equivalent </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#addAll(java.util.Collection, java.lang.Iterable)" rel="nofollow"><tt>addAll(Collection addTo, Iterable toAdd)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.addAll(Collection)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#contains(java.lang.Iterable, java.lang.Object)" rel="nofollow"><tt>contains(Iterable, Object)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.contains(Object)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#contains(java.lang.Object)" rel="nofollow"><tt>FluentIterable.contains(Object)</tt></a></td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#removeAll(java.lang.Iterable, java.util.Collection)" rel="nofollow"><tt>removeAll(Iterable removeFrom, Collection toRemove)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.removeAll(Collection)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#retainAll(java.lang.Iterable, java.util.Collection)" rel="nofollow"><tt>retainAll(Iterable removeFrom, Collection toRetain)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.retainAll(Collection)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#size(java.lang.Iterable)" rel="nofollow"><tt>size(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.size()</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#size()" rel="nofollow"><tt>FluentIterable.size()</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#toArray(java.lang.Iterable, java.lang.Class)" rel="nofollow"><tt>toArray(Iterable, Class)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.toArray(T[])</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#toArray(java.lang.Class)" rel="nofollow"><tt>FluentIterable.toArray(Class)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#isEmpty(java.lang.Iterable)" rel="nofollow"><tt>isEmpty(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.isEmpty()</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#isEmpty()" rel="nofollow"><tt>FluentIterable.isEmpty()</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#get(java.lang.Iterable, int)" rel="nofollow"><tt>get(Iterable, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>List.get(int)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git- history/release12/javadoc/com/google/common/collect/FluentIterable.html#get(int)" rel="nofollow"><tt>FluentIterable.get(int)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#toString(java.lang.Iterable)" rel="nofollow"><tt>toString(Iterable)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.toString()</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#toString()" rel="nofollow"><tt>FluentIterable.toString()</tt></a> </td></tr> </table></p><h3><a name="FluentIterable"></a><tt>FluentIterable</tt><a href="#FluentIterable" class="section_anchor"></a></h3><p>Besides the methods covered above and in the functional idioms <a href="/p/guava-libraries/wiki/FunctionalExplained">article</a>, <tt>FluentIterable</tt> has a few convenient methods for copying into an immutable collection: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableList</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#toImmutableList()&gt;`toImmutableList()`&lt;/a" rel="nofollow"> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#toImmutableSet()" rel="nofollow"><tt>toImmutableSet()</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ImmutableSortedSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release12/javadoc/com/google/common/collect/FluentIterable.html#toImmutableSortedSet(java.util.Comparator)" rel="nofollow"><tt>toImmutableSortedSet(Comparator)</tt></a> </td></tr> </table></p><h1><a name="Lists"></a>Lists<a href="#Lists" class="section_anchor"></a></h1><p>In addition to static constructor methods and functional programming methods, <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Lists.html" rel="nofollow"><tt>Lists</tt></a> provides a number of valuable utility methods on <tt>List</tt> objects. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#partition(java.util.List, int)" rel="nofollow"><tt>partition(List, int)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns a view of the underlying list, partitioned into chunks of the specified size. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#reverse(java.util.List)" rel="nofollow"><tt>reverse(List)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns a reversed view of the specified list.  <i>Note</i>: if the list is immutable, consider <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableList.html#reverse()" rel="nofollow"><tt>ImmutableList.reverse()</tt></a> instead. </td></tr> </table></p><pre class="prettyprint">List&lt;Integer&gt; countUp = Ints.asList(1, 2, 3, 4, 5);
List&lt;Integer&gt; countDown = Lists.reverse(theList); // {5, 4, 3, 2, 1}

List&lt;List&lt;Integer&gt;&gt; parts = Lists.partition(countUp, 2); // {{1, 2}, {3, 4}, {5}}</pre><h3><a name="Static_Factories"></a>Static Factories<a href="#Static_Factories" class="section_anchor"></a></h3><p><tt>Lists</tt> provides the following static factory methods: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Implementation </td><td style="border: 1px solid #ccc; padding: 5px;"> Factories </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ArrayList</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayList()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayList(E...)" rel="nofollow">with elements</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayList(java.lang.Iterable)" rel="nofollow">from <tt>Iterable</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayListWithCapacity(int)" rel="nofollow">with exact capacity</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayListWithExpectedSize(int)" rel="nofollow">with expected size</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newArrayList(java.util.Iterator)" rel="nofollow">from <tt>Iterator</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedList</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newLinkedList()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#newLinkedList(java.lang.Iterable)" rel="nofollow">from <tt>Iterable</tt></a> </td></tr> </table></p><h1><a name="Sets"></a>Sets<a href="#Sets" class="section_anchor"></a></h1><p>The <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Sets.html" rel="nofollow"><tt>Sets</tt></a> utility class includes a number of spicy methods. </p><h3><a name="Set-Theoretic_Operations"></a>Set-Theoretic Operations<a href="#Set-Theoretic_Operations" class="section_anchor"></a></h3><p>We provide a number of standard set-theoretic operations, implemented as views over the argument sets.  These return a <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.SetView.html" rel="nofollow"><tt>SetView</tt></a>, which can be used: <ul><li>as a <tt>Set</tt> directly, since it implements the <tt>Set</tt> interface </li><li>by copying it into another mutable collection with <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.SetView.html#copyInto(S)" rel="nofollow"><tt>copyInto(Set)</tt></a>  </li><li>by making an immutable copy with <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.SetView.html#immutableCopy()" rel="nofollow"><tt>immutableCopy()</tt></a> </li></ul></p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#union(java.util.Set, java.util.Set)" rel="nofollow"><tt>union(Set, Set)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#intersection(java.util.Set, java.util.Set)" rel="nofollow"><tt>intersection(Set, Set)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#difference(java.util.Set, java.util.Set)" rel="nofollow"><tt>difference(Set, Set)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#symmetricDifference(java.util.Set, java.util.Set)" rel="nofollow"><tt>symmetricDifference(Set, Set)</tt></a> </td></tr> </table></p><p>For example: </p><pre class="prettyprint">Set&lt;String&gt; wordsWithPrimeLength = ImmutableSet.of(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;);
Set&lt;String&gt; primes = ImmutableSet.of(&quot;two&quot;, &quot;three&quot;, &quot;five&quot;, &quot;seven&quot;);

SetView&lt;String&gt; intersection = Sets.intersection(primes, wordsWithPrimeLength); // contains &quot;two&quot;, &quot;three&quot;, &quot;seven&quot;
// I can use intersection as a Set directly, but copying it can be more efficient if I use it a lot.
return intersection.immutableCopy();</pre><h3><a name="Other_Set_Utilities"></a>Other Set Utilities<a href="#Other_Set_Utilities" class="section_anchor"></a></h3><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Description </td><td style="border: 1px solid #ccc; padding: 5px;"> See Also </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#cartesianProduct(java.util.List)" rel="nofollow"><tt>cartesianProduct(List&lt;Set&gt;)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns every possible list that can be obtained by choosing one element from each set. </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#cartesianProduct(java.util.Set...)" rel="nofollow"><tt>cartesianProduct(Set...)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#powerSet(java.util.Set)" rel="nofollow"><tt>powerSet(Set)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the set of subsets of the specified set. </td><td style="border: 1px solid #ccc; padding: 5px;"> </td></tr> </table></p><pre class="prettyprint">Set&lt;String&gt; animals = ImmutableSet.of(&quot;gerbil&quot;, &quot;hamster&quot;);
Set&lt;String&gt; fruits = ImmutableSet.of(&quot;apple&quot;, &quot;orange&quot;, &quot;banana&quot;);

Set&lt;List&lt;String&gt;&gt; product = Sets.cartesianProduct(animals, fruits);
// {{&quot;gerbil&quot;, &quot;apple&quot;}, {&quot;gerbil&quot;, &quot;orange&quot;}, {&quot;gerbil&quot;, &quot;banana&quot;},
//  {&quot;hamster&quot;, &quot;apple&quot;}, {&quot;hamster&quot;, &quot;orange&quot;}, {&quot;hamster&quot;, &quot;banana&quot;}}

Set&lt;Set&lt;String&gt;&gt; animalSets = Sets.powerSet(animals);
// {{}, {&quot;gerbil&quot;}, {&quot;hamster&quot;}, {&quot;gerbil&quot;, &quot;hamster&quot;}}</pre><h3><a name="Static_Factories"></a>Static Factories<a href="#Static_Factories" class="section_anchor"></a></h3><p><tt>Sets</tt> provides the following static factory methods: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Implementation </td><td style="border: 1px solid #ccc; padding: 5px;"> Factories </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newHashSet()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newHashSet(E...)" rel="nofollow">with elements</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newHashSet(java.lang.Iterable)" rel="nofollow">from <tt>Iterable</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newHashSetWithExpectedSize(int)" rel="nofollow">with expected size</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newHashSet(java.util.Iterator)" rel="nofollow">from <tt>Iterator</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newLinkedHashSet()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newLinkedHashSet(java.lang.Iterable)" rel="nofollow">from <tt>Iterable</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newLinkedHashSetWithExpectedSize(int)" rel="nofollow">with expected size</a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>TreeSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newTreeSet()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newTreeSet(java.util.Comparator)" rel="nofollow">with <tt>Comparator</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#newTreeSet(java.lang.Iterable)" rel="nofollow">from <tt>Iterable</tt></a> </td></tr> </table></p><h1><a name="Maps"></a>Maps<a href="#Maps" class="section_anchor"></a></h1><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html" rel="nofollow"><tt>Maps</tt></a> has a number of cool utilities that deserve individual explanation. </p><h3><a name="uniqueIndex"></a><tt>uniqueIndex</tt><a href="#uniqueIndex" class="section_anchor"></a></h3><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#uniqueIndex(java.lang.Iterable, com.google.common.base.Function)" rel="nofollow"><tt>Maps.uniqueIndex(Iterable, Function)</tt></a> addresses the common case of having a bunch of objects that each have some unique attribute, and wanting to be able to look up those objects based on that attribute. </p><p>Let&#x27;s say we have a bunch of strings that we know have unique lengths, and we want to be able to look up the string with some particular length. </p><pre class="prettyprint">ImmutableMap&lt;Integer, String&gt; stringsByIndex = Maps.uniqueIndex(strings, new Function&lt;String, Integer&gt; () {
    public Integer apply(String string) {
      return string.length();
    }
  });</pre><p>If indices are <i>not</i> unique, see <tt>Multimaps.index</tt> below. </p><h3><a name="difference"></a><tt>difference</tt><a href="#difference" class="section_anchor"></a></h3><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#difference(java.util.Map, java.util.Map)" rel="nofollow"><tt>Maps.difference(Map, Map)</tt></a> allows you to compare all the differences between two maps.  It returns a <tt>MapDifference</tt> object, which breaks down the Venn diagram into: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.html#entriesInCommon()" rel="nofollow"><tt>entriesInCommon()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> The entries which are in both maps, with both matching keys and values. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.html#entriesDiffering()" rel="nofollow"><tt>entriesDiffering()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> The entries with the same keys, but differing values.  The values in this map are of type <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.ValueDifference.html" rel="nofollow"><tt>MapDifference.ValueDifference</tt></a>, which lets you look at the left and right values. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.html#entriesOnlyOnLeft()" rel="nofollow"><tt>entriesOnlyOnLeft()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the entries whose keys are in the left but not in the right map. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.html#entriesOnlyOnRight()" rel="nofollow"><tt>entriesOnlyOnRight()</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns the entries whose keys are in the right but not in the left map. </td></tr> </table></p><pre class="prettyprint">Map&lt;String, Integer&gt; left = ImmutableMap.of(&quot;a&quot;, 1, &quot;b&quot;, 2, &quot;c&quot;, 3);
Map&lt;String, Integer&gt; right = ImmutableMap.of(&quot;b&quot;, 2, &quot;c&quot;, 4, &quot;d&quot;, 5);
MapDifference&lt;String, Integer&gt; diff = Maps.difference(left, right);

diff.entriesInCommon(); // {&quot;b&quot; =&gt; 2}
diff.entriesDiffering(); // {&quot;c&quot; =&gt; (3, 4)}
diff.entriesOnlyOnLeft(); // {&quot;a&quot; =&gt; 1}
diff.entriesOnlyOnRight(); // {&quot;d&quot; =&gt; 5}</pre><h3><a name="BiMap_utilities"></a><tt>BiMap</tt> utilities<a href="#BiMap_utilities" class="section_anchor"></a></h3><p>The Guava utilities on <tt>BiMap</tt> live in the <tt>Maps</tt> class, since a <tt>BiMap</tt>  is also a <tt>Map</tt>. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>BiMap</tt> utility </td><td style="border: 1px solid #ccc; padding: 5px;"> Corresponding <tt>Map</tt> utility </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#synchronizedBiMap(com.google.common.collect.BiMap)" rel="nofollow"><tt>synchronizedBiMap(BiMap)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collections.synchronizedMap(Map)</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#unmodifiableBiMap(com.google.common.collect.BiMap)" rel="nofollow"><tt>unmodifiableBiMap(BiMap)</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collections.unmodifiableMap(Map)</tt></a> </td></tr> </table></p><h3><a name="Static_Factories"></a>Static Factories<a href="#Static_Factories" class="section_anchor"></a></h3><p><tt>Maps</tt> provides the following static factory methods. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Implementation </td><td style="border: 1px solid #ccc; padding: 5px;"> Factories </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>HashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newHashMap()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newHashMap(java.util.Map)" rel="nofollow">from <tt>Map</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newHashMapWithExpectedSize(int)" rel="nofollow">with expected size</a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>LinkedHashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newLinkedHashMap()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newLinkedHashMap(java.util.Map)" rel="nofollow">from <tt>Map</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>TreeMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newTreeMap()" rel="nofollow">basic</a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newTreeMap(java.util.Comparator)" rel="nofollow">from <tt>Comparator</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newTreeMap(java.util.SortedMap)" rel="nofollow">from <tt>SortedMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>EnumMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newEnumMap(java.lang.Class)" rel="nofollow">from <tt>Class</tt></a>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newEnumMap(java.util.Map)" rel="nofollow">from <tt>Map</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ConcurrentMap</tt> (supporting all operations) </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newConcurrentMap()" rel="nofollow">basic</a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>IdentityHashMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Maps.html#newIdentityHashMap()" rel="nofollow">basic</a> </td></tr> </table></p><h1><a name="Multisets"></a>Multisets<a href="#Multisets" class="section_anchor"></a></h1><p>Standard <tt>Collection</tt> operations, such as <tt>containsAll</tt>, ignore the count of elements in the multiset, and only care about whether elements are in the multiset at all, or not.  <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multisets.html" rel="nofollow"><tt>Multisets</tt></a> provides a number of operations that take into account element multiplicities in multisets. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Method </td><td style="border: 1px solid #ccc; padding: 5px;"> Explanation </td><td style="border: 1px solid #ccc; padding: 5px;"> Difference from <tt>Collection</tt> method </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#containsOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)" rel="nofollow"><tt>containsOccurrences(Multiset sup, Multiset sub)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns <tt>true</tt> if <tt>sub.count(o) &lt;= super.count(o)</tt> for all <tt>o</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.containsAll</tt> ignores counts, and only tests whether elements are contained at all. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#removeOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)" rel="nofollow"><tt>removeOccurrences(Multiset removeFrom, Multiset toRemove)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Removes one occurrence in <tt>removeFrom</tt> for each occurrence of an element in <tt>toRemove</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.removeAll</tt> removes all occurences of any element that occurs even once in <tt>toRemove</tt>. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)" rel="nofollow"><tt>retainOccurrences(Multiset removeFrom, Multiset toRetain)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Guarantees that <tt>removeFrom.count(o) &lt;= toRetain.count(o)</tt> for all <tt>o</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection.retainAll</tt> keeps all occurrences of elements that occur even once in <tt>toRetain</tt>. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#intersection(com.google.common.collect.Multiset, com.google.common.collect.Multiset)" rel="nofollow"><tt>intersection(Multiset, Multiset)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns a view of the intersection of two multisets; a nondestructive alternative to <tt>retainOccurrences</tt>. </td><td style="border: 1px solid #ccc; padding: 5px;"> Has no analogue </td></tr> </table></p><pre class="prettyprint">Multiset&lt;String&gt; multiset1 = HashMultiset.create();
multiset1.add(&quot;a&quot;, 2);

Multiset&lt;String&gt; multiset2 = HashMultiset.create();
multiset2.add(&quot;a&quot;, 5);

multiset1.containsAll(multiset2); // returns true: all unique elements are contained, 
  // even though multiset1.count(&quot;a&quot;) == 2 &lt; multiset2.count(&quot;a&quot;) == 5
Multisets.containsOccurrences(multiset1, multiset2); // returns false

multiset2.removeOccurrences(multiset1); // multiset2 now contains 3 occurrences of &quot;a&quot;

multiset2.removeAll(multiset1); // removes all occurrences of &quot;a&quot; from multiset2, even though multiset1.count(&quot;a&quot;) == 2
multiset2.isEmpty(); // returns true</pre><p>Other utilities in <tt>Multisets</tt> include: </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Multisets.html#copyHighestCountFirst(com.google.common.collect.Multiset)" rel="nofollow"><tt>copyHighestCountFirst(Multiset)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an immutable copy of the multiset that iterates over elements in descending frequency order. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#unmodifiableMultiset(com.google.common.collect.Multiset)" rel="nofollow"><tt>unmodifiableMultiset(Multiset)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an unmodifiable view of the multiset. </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multisets.html#unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset)" rel="nofollow"><tt>unmodifiableSortedMultiset(SortedMultiset)</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> Returns an unmodifiable view of the sorted multiset. </td></tr> </table></p><pre class="prettyprint">Multiset&lt;String&gt; multiset = HashMultiset.create();
multiset.add(&quot;a&quot;, 3);
multiset.add(&quot;b&quot;, 5);
multiset.add(&quot;c&quot;, 1);

ImmutableMultiset&lt;String&gt; highestCountFirst = Multisets.copyHighestCountFirst(multiset);

// highestCountFirst, like its entrySet and elementSet, iterates over the elements in order {&quot;b&quot;, &quot;a&quot;, &quot;c&quot;}</pre><h1><a name="Multimaps"></a>Multimaps<a href="#Multimaps" class="section_anchor"></a></h1><p><a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html" rel="nofollow"><tt>Multimaps</tt></a> provides a number of general utility operations that deserve individual explanation. </p><h3><a name="index"></a><tt>index</tt><a href="#index" class="section_anchor"></a></h3><p>The cousin to <tt>Maps.uniqueIndex</tt>, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#index(java.lang.Iterable, com.google.common.base.Function)" rel="nofollow"><tt>Multimaps.index(Iterable, Function)</tt></a> answers the case when you want to be able to look up all objects with some particular attribute in common, which is not necessarily unique. </p><p>Let&#x27;s say we want to group strings based on their length. </p><pre class="prettyprint">ImmutableSet&lt;String&gt; digits = ImmutableSet.of(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;,
  &quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;, &quot;nine&quot;);
Function&lt;String, Integer&gt; lengthFunction = new Function&lt;String, Integer&gt;() {
  public Integer apply(String string) {
    return string.length();
  }
};
ImmutableListMultimap&lt;Integer, String&gt; digitsByLength = Multimaps.index(digits, lengthFunction);
/*
 * digitsByLength maps:
 *  3 =&gt; {&quot;one&quot;, &quot;two&quot;, &quot;six&quot;}
 *  4 =&gt; {&quot;zero&quot;, &quot;four&quot;, &quot;five&quot;, &quot;nine&quot;}
 *  5 =&gt; {&quot;three&quot;, &quot;seven&quot;, &quot;eight&quot;}
 */</pre><h3><a name="invertFrom"></a><tt>invertFrom</tt><a href="#invertFrom" class="section_anchor"></a></h3><p>Since <tt>Multimap</tt> can map many keys to one value, and one key to many values, it can be useful to invert a <tt>Multimap</tt>.  Guava provides <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#invertFrom(com.google.common.collect.Multimap, M)" rel="nofollow"><tt>invertFrom(Multimap toInvert, Multimap dest)</tt></a> to let you do this, without choosing an implementation for you. </p><p><i>NOTE:</i> If you are using an <tt>ImmutableMultimap</tt>, consider <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableMultimap.html#inverse()" rel="nofollow"><tt>ImmutableMultimap.inverse()</tt></a> instead. </p><pre class="prettyprint">ArrayListMultimap&lt;String, Integer&gt; multimap = ArrayListMultimap.create();
multimap.putAll(&quot;b&quot;, Ints.asList(2, 4, 6));
multimap.putAll(&quot;a&quot;, Ints.asList(4, 2, 1));
multimap.putAll(&quot;c&quot;, Ints.asList(2, 5, 3));

TreeMultimap&lt;Integer, String&gt; inverse = Multimaps.invertFrom(multimap, TreeMultimap.&lt;Integer, String&gt; create());
// note that we choose the implementation, so if we use a TreeMultimap, we get results in order
/*
 * inverse maps:
 *  1 =&gt; {&quot;a&quot;}
 *  2 =&gt; {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}
 *  3 =&gt; {&quot;c&quot;}
 *  4 =&gt; {&quot;a&quot;, &quot;b&quot;}
 *  5 =&gt; {&quot;c&quot;}
 *  6 =&gt; {&quot;b&quot;}
 */</pre><h3><a name="forMap"></a><tt>forMap</tt><a href="#forMap" class="section_anchor"></a></h3><p>Need to use a <tt>Multimap</tt> method on a <tt>Map</tt>?  <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#forMap(java.util.Map)" rel="nofollow"><tt>forMap(Map)</tt></a> views a <tt>Map</tt> as a <tt>SetMultimap</tt>.  This is particularly useful, for example, in combination with <tt>Multimaps.invertFrom</tt>. </p><pre class="prettyprint">Map&lt;String, Integer&gt; map = ImmutableMap.of(&quot;a&quot;, 1, &quot;b&quot;, 1, &quot;c&quot;, 2);
SetMultimap&lt;String, Integer&gt; multimap = Multimaps.forMap(map);
// multimap maps [&quot;a&quot; =&gt; {1}, &quot;b&quot; =&gt; {1}, &quot;c&quot; =&gt; {2}]
Multimap&lt;Integer, String&gt; inverse = Multimaps.invertFrom(multimap, HashMultimap.&lt;Integer, String&gt; create());
// inverse maps [1 =&gt; {&quot;a&quot;, &quot;b&quot;}, 2 =&gt; {&quot;c&quot;}]</pre><h3><a name="Wrappers"></a>Wrappers<a href="#Wrappers" class="section_anchor"></a></h3><p><tt>Multimaps</tt> provides the traditional wrapper methods, as well as tools to get custom <tt>Multimap</tt> implementations based on <tt>Map</tt> and <tt>Collection</tt> implementations of your choice. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Unmodifiable </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#unmodifiableMultimap(com.google.common.collect.Multimap)" rel="nofollow"><tt>Multimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#unmodifiableListMultimap(com.google.common.collect.ListMultimap)" rel="nofollow"><tt>ListMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#unmodifiableSetMultimap(com.google.common.collect.SetMultimap)" rel="nofollow"><tt>SetMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)" rel="nofollow"><tt>SortedSetMultimap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> Synchronized </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#synchronizedMultimap(com.google.common.collect.Multimap)" rel="nofollow"><tt>Multimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#synchronizedListMultimap(com.google.common.collect.ListMultimap)" rel="nofollow"><tt>ListMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#synchronizedSetMultimap(com.google.common.collect.SetMultimap)" rel="nofollow"><tt>SetMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap)" rel="nofollow"><tt>SortedSetMultimap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> Custom Implementation </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#newMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow"><tt>Multimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#newListMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow"><tt>ListMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#newSetMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow"><tt>SetMultimap</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Multimaps.html#newSortedSetMultimap(java.util.Map, com.google.common.base.Supplier)" rel="nofollow"><tt>SortedSetMultimap</tt></a> </td></tr> </table></p><p>The custom <tt>Multimap</tt> implementations let you specify a particular implementation that should be used in the returned <tt>Multimap</tt>.  Caveats include: </p><ul><li>The multimap assumes complete ownership over of map and the lists returned by factory. Those objects should not be manually updated, they should be empty when provided, and they should not use soft, weak, or phantom references. </li><li><strong>No guarantees are made</strong> on what the contents of the <tt>Map</tt> will look like after you modify the <tt>Multimap</tt>. </li><li>The multimap is not threadsafe when any concurrent operations update the multimap, even if map and the instances generated by factory are. Concurrent read operations will work correctly, though.  Work around this with the <tt>synchronized</tt> wrappers if necessary. </li><li>The multimap is serializable if map, factory, the lists generated by factory, and the multimap contents are all serializable. </li><li>The collections returned by <tt>Multimap.get(key)</tt> are <i>not</i> of the same type as the collections returned by your <tt>Supplier</tt>, though if you supplier returns <tt>RandomAccess</tt> lists, the lists returned by <tt>Multimap.get(key)</tt> will also be random access. </li></ul><p>Note that the custom <tt>Multimap</tt> methods expect a <tt>Supplier</tt> argument to generate fresh new collections.  Here is an example of writing a <tt>ListMultimap</tt> backed by a <tt>TreeMap</tt> mapping to <tt>LinkedList</tt>. </p><pre class="prettyprint">ListMultimap&lt;String, Integer&gt; myMultimap = Multimaps.newListMultimap(
  Maps.newTreeMap&lt;String, Collection&lt;Integer&gt;&gt;(),
  new Supplier&lt;LinkedList&lt;Integer&gt;&gt;() {
    public LinkedList&lt;Integer&gt; get() {
      return Lists.newLinkedList();
    }
  });</pre><h1><a name="Tables"></a>Tables<a href="#Tables" class="section_anchor"></a></h1><p>The <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html" rel="nofollow"><tt>Tables</tt></a> class provides a few handy utilities. </p><h3><a name="customTable"></a><tt>customTable</tt><a href="#customTable" class="section_anchor"></a></h3><p>Comparable to the <tt>Multimaps.newXXXMultimap(Map, Supplier)</tt> utilities, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html#newCustomTable(java.util.Map, com.google.common.base.Supplier)" rel="nofollow"><tt>Tables.newCustomTable(Map, Supplier&lt;Map&gt;)</tt></a> allows you to specify a <tt>Table</tt> implementation using whatever row or column map you like. </p><pre class="prettyprint">// use LinkedHashMaps instead of HashMaps
Table&lt;String, Character, Integer&gt; table = Tables.newCustomTable(
  Maps.&lt;String, Map&lt;Character, Integer&gt;&gt;newLinkedHashMap(),
  new Supplier&lt;Map&lt;Character, Integer&gt;&gt; () {
    public Map&lt;Character, Integer&gt; get() {
      return Maps.newLinkedHashMap();
    }
  });</pre><h3><a name="transpose"></a><tt>transpose</tt><a href="#transpose" class="section_anchor"></a></h3><p>The <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html#transpose(com.google.common.collect.Table)" rel="nofollow"><tt>transpose(Table&lt;R, C, V&gt;)</tt></a> method allows you to view a <tt>Table&lt;R, C, V&gt;</tt> as a <tt>Table&lt;C, R, V&gt;</tt>.  For example, if you&#x27;re using a <tt>Table</tt> to model a weighted digraph, this will let you view the graph with all the edges reversed. </p><h3><a name="Wrappers"></a>Wrappers<a href="#Wrappers" class="section_anchor"></a></h3><p>These are the familiar unmodifiability wrappers you know and love.  Consider, however, using <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableTable.html" rel="nofollow"><tt>ImmutableTable</tt></a> instead in most cases. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Unmodifiable </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html#unmodifiableTable(com.google.common.collect.Table)" rel="nofollow"><tt>Table</tt></a> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Tables.html#unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable)" rel="nofollow"><tt>RowSortedTable</tt></a> </td></tr> </table></p>
 </div>
 </div>
 </td><tr>
</table>
 </div>


 
 <div id="wikicommentcol">
 


 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

<div class="collapse">


 


<div id="commentlist">

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/117679010609155180272/">j...@nwsnet.de</a
>,
 
 </span>
 <span class="date" title="Tue Dec 13 01:50:30 2011">Dec 13, 2011</span>
 <div>
<div class="commentcontent">
<p>I think the &quot;of course in JDK 7 you can use&quot; comment on the diamond operator vs. Guava&#x27;s collection factory methods is a bit misleading. While one can save redundant type information, a major improvement provided by, say, <tt>Lists.newArrayList*()</tt>, is the extension from just initializing a list with a Collection to Iterable, Iterator, and varargs. Also, explicitly initializing a new list with separate factory methods for capacity and size, respectively, avoids confusion regarding a value passed to the constructor being treated as element or not. </p><p>You might want to emphasize these IMHO massive improvements and don&#x27;t let the reader get away with &quot;nah, if you&#x27;re on JDK 7, you can ignore this&quot; ;) </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Fri Dec 23 05:14:02 2011">Dec 23, 2011</span>
 <div>
<div class="commentcontent">
<p>I had not even realized that.  Thanks for the tip! </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/117679010609155180272/">j...@nwsnet.de</a
>,
 
 </span>
 <span class="date" title="Fri Dec 23 08:26:32 2011">Dec 23, 2011</span>
 <div>
<div class="commentcontent">
<p>To emphasize the advantage of the vararg constructors, compare this (JDK): </p><pre class="prettyprint">Set&lt;String&gt; validCodes = new HashSet&lt;String&gt;();
validCodes.add(&quot;XZ13s&quot;);
validCodes.add(&quot;AB21/X&quot;);
validCodes.add(&quot;YYLEX&quot;);
validCodes.add(&quot;AR2D&quot;);</pre><p>and this (&quot;double bracket initialization&quot;; creates an anonymous inner class): </p><pre class="prettyprint">private static final Set&lt;String&gt; VALID_CODES = new HashSet&lt;String&gt;() {{
  add(&quot;XZ13s&quot;);
  add(&quot;AB21/X&quot;);
  add(&quot;YYLEX&quot;);
  add(&quot;AR2D&quot;); 
}};</pre><p>to this (Guava): </p><pre class="prettyprint">private static final Set&lt;String&gt; VALID_CODES = Sets.newHashSet(
  &quot;XZ13s&quot;,
  &quot;AB21/X&quot;,
  &quot;YYLEX&quot;,
  &quot;AR2D&quot; 
);</pre><p>Of course, it would make sense to use an immutable collection here because the elements are non-null, immutable itself, and the collection is most likely used as a constant: </p><pre class="prettyprint">private static final ImmutableSet&lt;String&gt; VALID_CODES = ImmutableSet.of(&quot;XZ13s&quot;, &quot;AB21/X&quot;, &quot;YYLEX&quot;, &quot;AR2D&quot;);</pre><p>(Values taken from <a href="http://c2.com/cgi/wiki?DoubleBraceInitialization" rel="nofollow">http://c2.com/cgi/wiki?DoubleBraceInitialization</a>) </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/105766086244428057700/">thomas.a...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Mon Jan 16 23:13:30 2012">Jan 16, 2012</span>
 <div>
<div class="commentcontent">
<p>Maybe you can add a description of <a href="http://docs.guava-libraries.googlecode.com/git-history/v11.0.1/javadoc/com/google/common/collect/Constraint.html" rel="nofollow">http://docs.guava-libraries.googlecode.com/git-history/v11.0.1/javadoc/com/google/common/collect/Constraint.html</a>. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Tue Jan 17 07:39:25 2012">Jan 17, 2012</span>
 <div>
<div class="commentcontent">
<p>Yeah, probably, although I have the vague impression that we might be thinking that feature at some point </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/113700247063081215225/">standard...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Thu Jan 26 10:52:59 2012">Jan 26, 2012</span>
 <div>
<div class="commentcontent">
<p>Nit: </p><p>&quot;Maps has a number of cool utilities<strong>, but they</strong> deserve individual explanation.&quot; </p><p>-&gt; </p><p>&quot;Maps has a number of cool utilities <strong>that</strong> deserve individual explanation.&quot; </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/112926251689309491325/">martin.k...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Thu Mar 15 01:29:38 2012">Mar 15, 2012</span>
 <div>
<div class="commentcontent">
<p>The example in <tt>Multimaps#invertFrom</tt> is wrongly typed. It should be: </p><pre class="prettyprint">TreeMultimap&lt;Integer, String&gt; inverse = Multimaps.invertFrom(multimap, TreeMultimap.&lt;Integer, String&gt;create())</pre><p>instead of: </p><pre class="prettyprint">TreeMultimap&lt;String, Integer&gt; inverse = Multimaps.invertFrom(multimap, TreeMultimap.&lt;String, Integer&gt; create());</pre><p>Cheers, - martin </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/113088408175808151207/">Sergey.V...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Tue Mar 20 23:13:40 2012">Mar 20, 2012</span>
 <div>
<div class="commentcontent">
<p>Looks like there is a typo. </p><p>Instead of  </p><pre class="prettyprint">List&lt;Integer&gt; parts = Lists.partition(countUp, 2); // {{1, 2}, {3, 4}, {5}}</pre><p>Should be  </p><pre class="prettyprint">List&lt;List&lt;Integer&gt;&gt; parts = Lists.partition(countUp, 2); // {{1, 2}, {3, 4}, {5}}</pre><p>Right? </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/107938871446026586775/">kty...@google.com</a
>,
 
 </span>
 <span class="date" title="Sat Jun  9 19:50:54 2012">Jun 9, 2012</span>
 <div>
<div class="commentcontent">
<p>typo: <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.html#entriesDiffering()" rel="nofollow">entriesDiffering()</a> returns map of type <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/MapDifference.ValueDifference.html" rel="nofollow">MapDifference.ValueDifference</a> </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/116913737934375449612/">mmu...@gmail.com</a
>,
 
 </span>
 <span class="date" title="Tue Jul 24 08:54:05 2012">Jul 24, 2012</span>
 <div>
<div class="commentcontent">
<p>How can I use the varargs version of Sets.cartesianProduct(...) without an unchecked generic array construction warning? example: </p><pre class="prettyprint">Set&lt;String&gt; x = Sets.newHashSet(&quot;foo&quot;, &quot;bar&quot;);
Set&lt;List&lt;String&gt;&gt; x_by_x = Sets.cartesianProduct(x, x);</pre><p>This results in an unchecked generic array construction for the varargs parameters, since it&#x27;s implemented via an array of &quot;x&quot; objects, which after erasure are simply Sets of Objects. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Sun Jul 29 08:32:05 2012">Jul 29, 2012</span>
 <div>
<div class="commentcontent">
<p>Well, the simplest way is Sets.cartesianProduct(ImmutableList<a href="/p/guava-libraries/w/edit/ImmutableList">?</a>.of(x, x)).  We wish there were a better way, but we can&#x27;t use e.g. @SafeVarargs<a href="/p/guava-libraries/w/edit/SafeVarargs">?</a> without depending on JDK 7. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/oxyg3n8@gmail.com/">oxyg3n8@gmail.com</a
>,
 
 </span>
 <span class="date" title="Wed Sep 12 03:39:31 2012">Sep 12, 2012</span>
 <div>
<div class="commentcontent">
<p>A concurrent Multimap that follows Java Concurrency in Practice listing 5.19, it doesn&#x27;t extend Multimap because my requirement was to consume the whole key and remove it, for a Job that kicks every N seconds which iterate every Key and consume the value (a concurrent Set) as a whole: </p><pre class="prettyprint">import com.google.common.collect.Maps;
import com.google.common.collect.Sets;

import java.util.Collection;
import java.util.Set;
import java.util.concurrent.ConcurrentMap;

/**
 * A general purpose Multimap implemenation for delayed processing and concurrent insertion/deletes.
 *
 * @param &lt;K&gt; A comparable Key
 * @param &lt;V&gt; A comparable Value
 */
public class ConcurrentMultiMap&lt;K extends Comparable, V extends Comparable&gt;
{
  private final ConcurrentMap&lt;K, Set&lt;V&gt;&gt; cache=Maps.newConcurrentMap();

  public void put(final K key, final V value)
  {
    Set&lt;V&gt; set=cache.get(key);
    if(set == null){
      set=Sets.newSetFromMap(Maps.&lt;V, Boolean&gt;newConcurrentMap());
      final Set&lt;V&gt; previousSet=cache.putIfAbsent(key, set);
      if(previousSet != null){
        set=previousSet;
      }
    }
    set.add(value);
  }

  public void putAll(final K key, final Collection&lt;V&gt; values)
  {
    Set&lt;V&gt; set=cache.get(key);
    if(set == null){
      set=Sets.newSetFromMap(Maps.&lt;V, Boolean&gt;newConcurrentMap());
      final Set&lt;V&gt; previousSet=cache.putIfAbsent(key, set);
      if(previousSet != null){
        set=previousSet;
      }
    }
    set.addAll(values);
  }

  public Set&lt;V&gt; remove(final K key)
  {
    return cache.remove(key);
  }

  public Set&lt;K&gt; getKeySet()
  {
    return cache.keySet();
  }

  public int size()
  {
    return cache.size();
  }

}</pre>
</div>
 
 
 </div>
 </div>
 

</div>
</div>

 


 <script type="text/javascript">
 function delComment(sequence_num, create_time, delete_mode) {
 var f = document.forms["delcom"];
 f.sequence_num.value = sequence_num;
 f.create_time.value = create_time;
 f.mode.value = delete_mode;
 f.submit();
 return false;
 }
 </script>


 </div>
 
 
 
 
 <br>
 <div class="artifactcomment">
 <span class="indicator">&#9658;</span> <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionUtilitiesExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionUtilitiesExplained"
 >Sign in</a> to add a comment
 </div>
 
 
 
 
 <form name="delcom" action="../w/delComment.do" method="POST">
 <input type="hidden" name="sequence_num" value="" >
 <input type="hidden" name="create_time" value="" >
 <input type="hidden" name="mode" value="" >
 <input type="hidden" name="pagename" value="CollectionUtilitiesExplained" >
 <input type="hidden" name="token" value="" >
 </form>


 <script src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/prettify/prettify.js"></script>
 <script type="text/javascript">
 prettyPrint();
 </script>

<script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/dit_scripts.js"></script>



  
 
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_core.js"></script>
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_dwiki.js"></script>
 
 
 
 
</div> 

<div id="footer" dir="ltr">
 <div class="text">
 <a href="/projecthosting/terms.html">Terms</a> -
 <a href="http://www.google.com/privacy.html">Privacy</a> -
 <a href="/p/support/">Project Hosting Help</a>
 </div>
</div>
 <div class="hostedBy" style="margin-top: -20px;">
 <span style="vertical-align: top;">Powered by <a href="http://code.google.com/projecthosting/">Google Project Hosting</a></span>
 </div>

 
 


 
 </body>
</html>


