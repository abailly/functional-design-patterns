
 



 



 
 
 <!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
 <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" >
 
 <meta name="ROBOTS" content="NOARCHIVE">
 
 <link rel="icon" type="image/vnd.microsoft.icon" href="http://www.gstatic.com/codesite/ph/images/phosting.ico">
 
 
 <link rel="canonical" href="http://code.google.com/p/guava-libraries/wiki/CollectionHelpersExplained" />
 
 <script type="text/javascript">
 
 (function(){var a=function(b){this.t={};this.tick=function(b,c,d){c=void 0!=d?d:(new Date).getTime();this.t[b]=c};this.tick("start",null,b)},e=new a;window.jstiming={Timer:a,load:e};try{var f=null;window.chrome&&window.chrome.csi&&(f=Math.floor(window.chrome.csi().pageT));null==f&&window.gtbExternal&&(f=window.gtbExternal.pageT());null==f&&window.external&&(f=window.external.pageT);f&&(window.jstiming.pt=f)}catch(g){};})();

 
 
 
 
 var codesite_token = null;
 
 
 var CS_env = {"profileUrl":null,"token":null,"assetHostPath":"http://www.gstatic.com/codesite/ph","domainName":null,"assetVersionPath":"http://www.gstatic.com/codesite/ph/17134919371905794448","projectHomeUrl":"/p/guava-libraries","relativeBaseUrl":"","projectName":"guava-libraries","loggedInUserEmail":null};
 var _gaq = _gaq || [];
 _gaq.push(
 ['siteTracker._setAccount', 'UA-18071-1'],
 ['siteTracker._trackPageview']);
 
 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
 })();
 
 </script>
 
 
 <title>CollectionHelpersExplained - 
 guava-libraries -
 
 Making it easier to extend collections tools yourself, explained. - 
 Guava: Google Core Libraries for Java 1.6+ - Google Project Hosting
 </title>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/core.css">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/ph_detail.css" >
 
 
 
 <link type="application/atom+xml" rel="alternate" href="/feeds/p/guava-libraries/gitchanges/basic?repo=wiki&amp;path=/CollectionHelpersExplained.wiki">
 
 
<!--[if IE]>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/17134919371905794448/css/d_ie.css" >
<![endif]-->
 <style type="text/css">
 .menuIcon.off { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -42px }
 .menuIcon.on { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -28px }
 .menuIcon.down { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 0; }
 
 
 #maincol {
 padding-top: 0;
 padding-bottom: 0;
 }

 
 </style>
</head>
<body class="t6">
<script type="text/javascript">
 window.___gcfg = {lang: 'en'};
 (function() 
 {var po = document.createElement("script");
 po.type = "text/javascript"; po.async = true;po.src = "https://apis.google.com/js/plusone.js";
 var s = document.getElementsByTagName("script")[0];
 s.parentNode.insertBefore(po, s);
 })();
</script>
<div class="headbg">

 <div id="gaia">
 

 <span>
 
 
 <a href="#" id="projects-dropdown" onclick="return false;"><u>My favorites</u> <small>&#9660;</small></a>
 | <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionHelpersExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionHelpersExplained" onclick="_CS_click('/gb/ph/signin');"><u>Sign in</u></a>
 
 </span>

 </div>

 <div class="gbh" style="left: 0pt;"></div>
 <div class="gbh" style="right: 0pt;"></div>
 
 
 <div style="height: 1px"></div>
<!--[if lte IE 7]>
<div style="text-align:center;">
Your version of Internet Explorer is not supported. Try a browser that
contributes to open source, such as <a href="http://www.firefox.com">Firefox</a>,
<a href="http://www.google.com/chrome">Google Chrome</a>, or
<a href="http://code.google.com/chrome/chromeframe/">Google Chrome Frame</a>.
</div>
<![endif]-->



 <table style="padding:0px; margin: 0px 0px 10px 0px; width:100%" cellpadding="0" cellspacing="0"
 itemscope itemtype="http://schema.org/CreativeWork">
 <tr style="height: 58px;">
 
 
 
 <td id="plogo">
 <link itemprop="url" href="/p/guava-libraries">
 <a href="/p/guava-libraries/">
 
 <img src="http://www.gstatic.com/codesite/ph/images/search-48.gif" alt="Logo" itemprop="image">
 
 </a>
 </td>
 
 <td style="padding-left: 0.5em">
 
 <div id="pname">
 <a href="/p/guava-libraries/"><span itemprop="name">guava-libraries</span></a>
 </div>
 
 <div id="psum">
 <a id="project_summary_link"
 href="/p/guava-libraries/"><span itemprop="description">Guava: Google Core Libraries for Java 1.6+</span></a>
 
 </div>
 
 
 </td>
 <td style="white-space:nowrap;text-align:right; vertical-align:bottom;">
 
 <form action="/hosting/search">
 <input size="30" name="q" value="" type="text">
 
 <input type="submit" name="projectsearch" value="Search projects" >
 </form>
 
 </tr>
 </table>

</div>

 
<div id="mt" class="gtb"> 
 <a href="/p/guava-libraries/" class="tab ">Project&nbsp;Home</a>
 
 
 
 
 <a href="/p/guava-libraries/downloads/list" class="tab ">Downloads</a>
 
 
 
 
 
 <a href="/p/guava-libraries/wiki/GuavaExplained?tm=6" class="tab active">Wiki</a>
 
 
 
 
 
 <a href="/p/guava-libraries/issues/list"
 class="tab ">Issues</a>
 
 
 
 
 
 <a href="/p/guava-libraries/source/checkout"
 class="tab ">Source</a>
 
 
 
 
 
 
 
 
 
 
 <div class=gtbc></div>
</div>
<table cellspacing="0" cellpadding="0" width="100%" align="center" border="0" class="st">
 <tr>
 
 
 
 
 <td class="subt">
 <div class="issueDetail">
<div class="isf">
 
 <span class="inIssueList"> 
 <span>Search</span>
 <form action="/p/guava-libraries/w/list" method="GET" style="display:inline">
 <select id="can" name="can" >
 <option disabled="disabled">Search within:</option>
 
 <option value="1" >&nbsp;All wiki pages</option>
 <option value="3" >&nbsp;Featured pages</option>
 <option value="2" selected="selected">&nbsp;Current pages</option>
 
 
 <option value="4" >&nbsp;Deprecated pages</option>
 
 </select>
 <span>for</span>
 <span id="qq"><input type="text" size="38" id="searchq" name="q" value=""
 autocomplete="off" ></span>
 
 
 
 <input type="submit" value="Search" >
 </form>
 </span>

 
 
 
 
 
 
 

</div>
</div>

 </td>
 
 
 
 
 
 
 <td align="right" valign="top" class="bevel-right"></td>
 </tr>
</table>


<script type="text/javascript">
 var cancelBubble = false;
 function _go(url) { document.location = url; }
</script>
<div id="maincol"
 
 
 style="padding:0 3px 3px 0; margin:0"
 
 
>

 






 
<style type="text/css">
 #wikimaincol { padding-top: 6px; padding-left:1em}
 #sidebarcontainer {
 padding: 1.5em 2px 2px 2px;
 min-width: 15em;
 max-width: 20em;
 overflow:hidden;
}
 .sidebartop ul { margin:0 0 0 .5em; padding-left:0 !important; list-style:none}
 .sidebartop ul ul { margin-left:1em; padding-left:0; list-style:none; display:none}
 .sidebartop li { margin:0 0 2px 0; padding:1px; padding-left:14px; cursor:pointer}
 .sidebartop li a { padding:2px}
 .sidebartop li { background: url(http://www.gstatic.com/codesite/ph/images/plus.gif) no-repeat 1px 3px}
 .sidebartop li.treeopen { background: url(http://www.gstatic.com/codesite/ph/images/minus.gif) no-repeat 1px 3px}
 .sidebartop li.treeleaf { background:none}
 .currentpagelink { 
 font-weight: bold;
 text-decoration: none;
 color: black !important; 
 background: #c3d9ff;
 }
 .sidebartop ul.treeleafcontainer { display:block;}
 .sidebarcontent { 
 vertical-align:top;
 padding-right: 3px;
 border-right: 2px solid #ccc;
 }
</style>



 <style type="text/css">
 .delcom { background: #e8e8e8 }
 .commentcontent {
 margin: 2em;
 padding: 0px 10px;
 width: 66em;
 }
 .artifactcomment {
 border-top: 3px solid #c3d9ff;
 }
 #commentform {
 border-top: 3px solid #c3d9ff;
 }
 </style>

<div id="wikipage">
<table>
 <tr>
 
 
 <td class="sidebarcontent">
 <div class="vt expand" id="wikisidebar">
 <div>
 
 <div style="float:right;">
 <a class="ifExpand" style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Hide sidebar"><b>&lsaquo;&lsaquo;</b></a>
 </div>
 <div class="ifCollapse" style="padding:0 2px">
 <a style="font-size:130%; color:blue; text-decoration:none"
 href="#" onclick="_DW_toggleSidebar(this); return false;"
 title="Show sidebar"><b>&rsaquo;&rsaquo;</b></a>
 </div>
 
 
 <div id="sidebarcontainer" class="sidebartop ifExpand">
 <ul><li><a href="/p/guava-libraries/wiki/GuavaExplained">Introduction</a> </li><li>Basic Utilities </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained">Using/avoiding null</a> </li><ul><li><a href="/p/guava-libraries/wiki/UsingAndAvoidingNullExplained#Optional">Optional</a> </li></ul><li><a href="/p/guava-libraries/wiki/PreconditionsExplained">Preconditions</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained">Ordering</a> </li><ul><li><a href="/p/guava-libraries/wiki/OrderingExplained#Creation">Creation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Manipulation">Manipulation</a> </li><li><a href="/p/guava-libraries/wiki/OrderingExplained#Application">Application</a> </li></ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained">Object methods</a> </li><ul><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals">equals</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#hashCode">hashCode</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#toString">toString</a> </li><li><a href="/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#compare/compareTo">compare/compareTo</a> </li></ul><li><a href="/p/guava-libraries/wiki/ThrowablesExplained">Throwables</a> </li></ul><li>Collections </li><ul><li><a href="/p/guava-libraries/wiki/ImmutableCollectionsExplained">Immutable collections</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained">New collection types</a> </li><ul><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multiset">Multiset</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Multimap">Multimap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#BiMap">BiMap</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#Table">Table</a> </li><li><a href="/p/guava-libraries/wiki/NewCollectionTypesExplained#ClassToInstanceMap">ClassToInstanceMap</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained">Utility Classes</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Iterables">Iterables</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Lists">Lists</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Sets">Sets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Maps">Maps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multisets">Multisets</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Multimaps">Multimaps</a> </li><li><a href="/p/guava-libraries/wiki/CollectionUtilitiesExplained#Tables">Tables</a> </li></ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained">Extension Utilities</a> </li><ul><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#Forwarding_Decorators">Forwarding Decorators</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#PeekingIterator">PeekingIterator</a> </li><li><a href="/p/guava-libraries/wiki/CollectionHelpersExplained#AbstractIterator">AbstractIterator</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/CachesExplained">Caches</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Applicability">Applicability</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Population">Population</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Eviction">Eviction</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Removal_Listeners">Removal Listeners</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Refresh">Refresh</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Timed_Eviction">Timed Eviction</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Size-based_Eviction">Size Caps</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Reference-based_Eviction">Garbage Collection</a> </li><li><a href="/p/guava-libraries/wiki/CachesExplained#Explicit_Removals">Explicit Removals</a> </li></ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Features">Features</a> </li><ul><li><a href="/p/guava-libraries/wiki/CachesExplained#Statistics">Statistics</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained">Functional Idioms</a> </li><ul><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions_and_Predicates">Obtaining</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Predicates">Using Predicates</a> </li><li><a href="/p/guava-libraries/wiki/FunctionalExplained#Functions">Using Functions</a> </li></ul><li>Concurrency </li><ul><li><a href="/p/guava-libraries/wiki/ListenableFutureExplained">ListenableFuture</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained">Service</a> </li><ul><li><a href="/p/guava-libraries/wiki/ServiceExplained#Using_a_Service">Using</a> </li><li><a href="/p/guava-libraries/wiki/ServiceExplained#Implementations">Implementations</a> </li></ul></ul><li><a href="/p/guava-libraries/wiki/StringsExplained">Strings</a> </li><ul><li><a href="/p/guava-libraries/wiki/StringsExplained#Joiner">Joiner</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Splitter">Splitter</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#CharMatcher">CharMatcher</a> </li><li><a href="/p/guava-libraries/wiki/StringsExplained#Charsets">Charsets</a> </li></ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained">Primitives</a> </li><ul><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Primitive_array_utilities">Primitive arrays</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#General_utility_methods">General utilities</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Byte_conversion_methods">Byte conversion</a> </li><li><a href="/p/guava-libraries/wiki/PrimitivesExplained#Unsigned_support">Unsigned support</a> </li></ul><li><a href="/p/guava-libraries/wiki/RangesExplained">Ranges</a> </li><ul><li><a href="/p/guava-libraries/wiki/RangesExplained#Building_Ranges">Building</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Operations">Operations</a> </li><li><a href="/p/guava-libraries/wiki/RangesExplained#Discrete_Domains">Discrete Domains</a> </li></ul><li><a href="/p/guava-libraries/wiki/IOExplained">I/O</a> </li><li><a href="/p/guava-libraries/wiki/HashingExplained">Hashing</a> </li><ul><li><a href="/p/guava-libraries/wiki/HashingExplained#BloomFilter">BloomFilter</a> </li></ul><li><a href="/p/guava-libraries/wiki/EventBusExplained">EventBus</a> </li><li><a href="/p/guava-libraries/wiki/MathExplained">Math</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Math_on_Integral_Types">Integral</a> </li><ul><li><a href="/p/guava-libraries/wiki/MathExplained#Checked_Arithmetic">Overflow Checking</a> </li></ul><li><a href="/p/guava-libraries/wiki/MathExplained#Floating-point_arithmetic">Floating Point</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained">Reflection</a> </li><ul><li><a href="/p/guava-libraries/wiki/ReflectionExplained#TypeToken">TypeToken</a> </li></ul><li><a href="/p/guava-libraries/wiki/ReleaseHistory">Releases</a> </li><ul><li><a href="/p/guava-libraries/wiki/Release13">Release 13</a> </li><li><a href="/p/guava-libraries/wiki/Release12">Release 12</a> </li><li><a href="/p/guava-libraries/wiki/Release11">Release 11</a> </li><li><a href="/p/guava-libraries/wiki/Release10">Release 10</a> </li></ul><li>Tips </li><ul><li><a href="/p/guava-libraries/wiki/PhilosophyExplained">Philosophy</a> </li><li><a href="/p/guava-libraries/wiki/UseGuavaInYourBuild">Building with Guava</a> </li><li><a href="/p/guava-libraries/wiki/UsingProGuardWithGuava">Shrinking JARs with ProGuard</a> </li><li><a href="/p/guava-libraries/wiki/ApacheCommonCollectionsEquivalents">Translating from Apache Commons</a> </li><li><a href="/p/guava-libraries/wiki/Compatibility">Guava and Compatibility</a> </li><li><a href="/p/guava-libraries/wiki/IdeaGraveyard">Idea Graveyard</a> </li><li><a href="/p/guava-libraries/wiki/FriendsOfGuava">Friends of Guava</a> </li><li><a href="/p/guava-libraries/wiki/HowToContribute">How to Contribute</a> </li></ul><li><a href="/p/guava-libraries/wiki/GuavaTermsExplained">Glossary</a> </li><li><a href="http://groups.google.com/group/guava-discuss" rel="nofollow">Mailing List</a> </li><li><a href="http://stackoverflow.com/questions/tagged/guava" rel="nofollow">Stack Overflow</a> </li><li><a href="http://code.google.com/p/memory-measurer/wiki/ElementCostInDataStructures" rel="nofollow">Footprint of JDK/Guava data structures</a> </li></ul>
 </div>
 </div>
</div>

 </td>
 
 <td style="vertical-align:top; padding-left:5px">
 
 <div id="wikiheader">
 
 <span style="font-size:120%;font-weight:bold">CollectionHelpersExplained</span>
 &nbsp;
 <div> 
 
 <i>Making it easier to extend collections tools yourself, explained.</i>
 
 
 
 <div id="wikiauthor" style="float:right">
 Updated <span title="Tue Mar 20 16:30:31 2012">
 Mar 20, 2012</span>
 
 by 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>
 
 </div>
 </div>
 </div>
 
 <div id="wikicontent">
 <div class="vt" id="wikimaincol">
 <h1><a name="Introduction"></a>Introduction<a href="#Introduction" class="section_anchor"></a></h1><p>Sometimes you need to write your own collection extensions.  Perhaps you want to add special behavior when elements are added to a list, or you want to write an <tt>Iterable</tt> that&#x27;s actually backed by a database query.  Guava provides a number of utilities to make these tasks easier for you, and for us.  (We <i>are</i>, after all, in the business of extending the collections framework ourselves.) </p><h1><a name="Forwarding_Decorators"></a>Forwarding Decorators<a href="#Forwarding_Decorators" class="section_anchor"></a></h1><p>For all the various collection interfaces, Guava provides <tt>Forwarding</tt> abstract classes to simplify using the <a href="http://en.wikipedia.org/wiki/Decorator_pattern" rel="nofollow">decorator pattern</a>. </p><p>The <tt>Forwarding</tt> classes define one abstract method, <tt>delegate()</tt>, which you should override to return the decorated object.  Each of the other methods delegate directly to the delegate: so, for example, <tt>ForwardingList.get(int)</tt> is simply implemented as <tt>delegate().get(int)</tt>. </p><p>By subclassing <tt>ForwardingXXX</tt> and implementing the <tt>delegate()</tt> method, you can override only selected methods in the targeted class, adding decorated functionality without having to delegate every method yourself. </p><p>Additionally, many methods have a <tt>standardMethod</tt> implementation which you can use to recover expected behavior, providing some of the same benefits as e.g. extending <tt>AbstractList</tt> or the other skeleton classes in the JDK. </p><p>Let&#x27;s do an example.  Suppose you wanted to decorate a <tt>List</tt> so that it logged all elements added to it.  Of course, we want to log elements no matter which method is used to add them -- <tt>add(int, E)</tt>, <tt>add(E)</tt>, or <tt>addAll(Collection)</tt> -- so we have to override all of these methods. </p><pre class="prettyprint">class AddLoggingList&lt;E&gt; extends ForwardingList&lt;E&gt; {
  final List&lt;E&gt; delegate; // backing list
  @Override protected List&lt;E&gt; delegate() {
    return delegate;
  }
  @Override public void add(int index, E elem) {
    log(index, elem);
    super.add(index, elem);
  }
  @Override public boolean add(E elem) {
    return standardAdd(elem); // implements in terms of add(int, E)
  }
  @Override public boolean addAll(Collection&lt;? extends E&gt; c) {
    return standardAddAll(c); // implements in terms of add
  }
}</pre><p>Remember, by default, all methods forward directly to the delegate, so overriding <tt>ForwardingMap.put</tt> will not change the behavior of <tt>ForwardingMap.putAll</tt>.  Be careful to override every method whose behavior must be changed, and make sure that your decorated collection satisfies its contract. </p><p>Generally, most methods provided by the abstract collection skeletons like <tt>AbstractList</tt> are also provided as <tt>standard</tt> implementations in the <tt>Forwarding</tt> decorators. </p><p>Interfaces that provide special views sometimes provide <tt>Standard</tt> implementations of those views.  For example, <tt>ForwardingMap</tt> provides <tt>StandardKeySet</tt>, <tt>StandardValues</tt>, and <tt>StandardEntrySet</tt> classes, each of which delegate their methods to the decorated map whenever possible, or otherwise, they leave methods that can&#x27;t be delegated as abstract. </p><p><table class="wikitable"><tr><td style="border: 1px solid #ccc; padding: 5px;"> Interface </td><td style="border: 1px solid #ccc; padding: 5px;"> Forwarding Decorator </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Collection</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingCollection.html" rel="nofollow"><tt>ForwardingCollection</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>List</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingList.html" rel="nofollow"><tt>ForwardingList</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Set</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingSet.html" rel="nofollow"><tt>ForwardingSet</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>SortedSet</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingSortedSet.html" rel="nofollow"><tt>ForwardingSortedSet</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Map</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingMap.html" rel="nofollow"><tt>ForwardingMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>SortedMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingSortedMap.html" rel="nofollow"><tt>ForwardingSortedMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ConcurrentMap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingConcurrentMap.html" rel="nofollow"><tt>ForwardingConcurrentMap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Map.Entry</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingMapEntry.html" rel="nofollow"><tt>ForwardingMapEntry</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Queue</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingQueue.html" rel="nofollow"><tt>ForwardingQueue</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Iterator</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingIterator.html" rel="nofollow"><tt>ForwardingIterator</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ListIterator</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingListIterator.html" rel="nofollow"><tt>ForwardingListIterator</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Multiset</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingMultiset.html" rel="nofollow"><tt>ForwardingMultiset</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>Multimap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingMultimap.html" rel="nofollow"><tt>ForwardingMultimap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>ListMultimap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingListMultimap.html" rel="nofollow"><tt>ForwardingListMultimap</tt></a> </td></tr> <tr><td style="border: 1px solid #ccc; padding: 5px;"> <tt>SetMultimap</tt> </td><td style="border: 1px solid #ccc; padding: 5px;"> <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/ForwardingSetMultimap.html" rel="nofollow"><tt>ForwardingSetMultimap</tt></a> </td></tr> </table></p><h1><a name="PeekingIterator"></a>PeekingIterator<a href="#PeekingIterator" class="section_anchor"></a></h1><p>Sometimes, the normal <tt>Iterator</tt> interface isn&#x27;t enough. </p><p><tt>Iterators</tt> supports the method <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterators.html#peekingIterator(java.util.Iterator)" rel="nofollow"><tt>Iterators.peekingIterator(Iterator)</tt></a>, which wraps an <tt>Iterator</tt> and returns a <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/PeekingIterator.html" rel="nofollow"><tt>PeekingIterator</tt></a>, a subtype of <tt>Iterator</tt> that lets you <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/PeekingIterator.html#peek()" rel="nofollow"><tt>peek()</tt></a> at the element that will be returned by the next call to <tt>next()</tt>. </p><p><i>Note:</i> the <tt>PeekingIterator</tt> returned by <tt>Iterators.peekingIterator</tt> does not support <tt>remove()</tt> calls after a <tt>peek()</tt>. </p><p>Let&#x27;s do an example: copying a <tt>List</tt> while eliminating consecutive duplicate elements. </p><pre class="prettyprint">List&lt;E&gt; result = Lists.newArrayList();
PeekingIterator&lt;E&gt; iter = Iterators.peekingIterator(source.iterator());
while (iter.hasNext()) {
  E current = iter.next();
  while (iter.hasNext() &amp;&amp; iter.peek().equals(current)) {
    // skip this duplicate element
    iter.next();
  }
  result.add(current);
}</pre><p>The traditional way to do this involves keeping track of the previous element, and falling back under certain conditions, but that&#x27;s a tricky and bug-prone business.  <tt>PeekingIterator</tt> is comparatively straightforward to understand and use. </p><h1><a name="AbstractIterator"></a>AbstractIterator<a href="#AbstractIterator" class="section_anchor"></a></h1><p>Implementing your own <tt>Iterator</tt>?  <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/AbstractIterator.html" rel="nofollow"><tt>AbstractIterator</tt></a> can make your life easier. </p><p>It&#x27;s easiest to explain with an example.  Let&#x27;s say we wanted to wrap an iterator so as to skip null values. </p><pre class="prettyprint">public static Iterator&lt;String&gt; skipNulls(final Iterator&lt;String&gt; in) {
  return new AbstractIterator&lt;String&gt;() {
    protected String computeNext() {
      while (in.hasNext()) {
        String s = in.next();
        if (s != null) {
          return s;
        }
      }
      return endOfData();
    }
  };
}</pre><p>You implement one method, <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/AbstractIterator.html#computeNext()" rel="nofollow"><tt>computeNext()</tt></a>, that just computes the next value.  When the sequence is done, just return <tt>endOfData()</tt> to mark the end of the iteration. </p><p><i>Note:</i> <tt>AbstractIterator</tt> extends <tt>UnmodifiableIterator</tt>, which forbids the implementation of <tt>remove()</tt>.  If you need an iterator that supports <tt>remove()</tt>, you should not extend <tt>AbstractIterator</tt>. </p><h2><a name="AbstractLinkedIterator"></a>AbstractLinkedIterator<a href="#AbstractLinkedIterator" class="section_anchor"></a></h2><p>Some iterators are more easily expressed in other ways.  <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/AbstractLinkedIterator.html" rel="nofollow"><tt>AbstractLinkedIterator</tt></a> provides another way of expressing an iteration. </p><pre class="prettyprint">
   Iterator&lt;Integer&gt; powersOfTwo = new AbstractLinkedIterator&lt;Integer&gt;(1) { // note the initial value!
     protected Integer computeNext(Integer previous) {
       return (previous == 1 &lt;&lt; 30) ? null : previous * 2;
     }
   };</pre><p>Here, we implement the method <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/AbstractLinkedIterator.html#computeNext(T)" rel="nofollow"><tt>computeNext(T)</tt></a>, which accepts the previous value as an argument.   </p><p>Note that you must additionally pass an initial value, or <tt>null</tt> if the iterator should end immediately.  Note that <tt>computeNext</tt> assumes that a <tt>null</tt> value implies the end of iteration -- <tt>AbstractLinkedIterator</tt> cannot be used to implement an iterator which may return <tt>null</tt>. </p>
 </div>
 </div>
 </td><tr>
</table>
 </div>


 
 <div id="wikicommentcol">
 


 
 
 
 
 

<div class="collapse">


 


<div id="commentlist">

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by 
 
 

 <a class="userlink"
 href="/u/ashwin.jayaprakash/">ashwin.jayaprakash</a
>,
 
 </span>
 <span class="date" title="Sun Feb 26 14:31:39 2012">Feb 26, 2012</span>
 <div>
<div class="commentcontent">
<p>My 2 cents on ForwardingMap<a href="/p/guava-libraries/w/edit/ForwardingMap">?</a>: <ul><li>Why do all standard<strong> methods in the ForwardingMap<a href="/p/guava-libraries/w/edit/ForwardingMap">?</a> class start with the JavaDoc<a href="/p/guava-libraries/w/edit/JavaDoc">?</a> &quot;a sensible definition..&quot;? What does that even mean? Sensible in what regard?  </li><li>Do the Standard</strong> inner classes simply relay calls to the delegate?  </li><li>Without reading the source code it is difficult to understand what the user should override </li><li>Also shouldn&#x27;t the standard<strong> methods be final to prevent overriding? </li></ul></strong></p><p>Thanks. </p>
</div>
 
 
 </div>
 </div>
 

 
 <div class="artifactcomment"
 
 >
 
 
 
 
 
 
 <span class="author">Comment
 
 by  project member 
 
 

 <a class="userlink"
 href="/u/wasserman.louis/">wasserman.louis</a
>,
 
 </span>
 <span class="date" title="Sun Feb 26 17:40:53 2012">Feb 26, 2012</span>
 <div>
<div class="commentcontent">
<p>The &quot;standard&quot; methods are provided to approximate the benefits of e.g. extending AbstractMap<a href="/p/guava-libraries/w/edit/AbstractMap">?</a> -- you have skeletal implementations of most methods, even if they&#x27;re not the most efficient implementations possible -- while still being a traditional &quot;forwarding&quot; decorator class that, by default, delegates each of its methods to the backing object.  The &quot;standard&quot; methods are our attempt to get the best of both worlds. </p><p>Frequently, the &quot;standard&quot; methods are the only implementations possible, just in terms of the other methods available.  In fact, the &quot;standard&quot; method implementations are frequently the same as, or equivalent to, the implementations in the corresponding &quot;Abstract&quot; skeleton class -- so the &quot;standard&quot; methods of ForwardingList<a href="/p/guava-libraries/w/edit/ForwardingList">?</a> are typically equivalent to the implementations in AbstractList<a href="/p/guava-libraries/w/edit/AbstractList">?</a>. </p><p>The word &quot;sensible&quot; there is basically meant as &quot;the smartest implementation we could design in terms of the other accessible methods of the delegate.&quot; </p><p>The &quot;standard&quot; inner classes relay as many calls as possible to the delegate.  However, for example, ForwardingMap<a href="/p/guava-libraries/w/edit/ForwardingMap">?</a>.StandardEntrySet<a href="/p/guava-libraries/w/edit/StandardEntrySet">?</a> needs you to implement its iterator() method yourself, since you can&#x27;t derive an entrySet().iterator() implementation from the methods of the delegate. </p><p>To figure out what you should override, the general heuristic is to override any method whose &quot;standard&quot; implementation is specified to be &quot;in terms of&quot; a method you overrode earlier.  So when you override put, you should see in the Javadoc that standardPutAll is defined in terms of put, so you should override putAll to be implemented as standardPutAll. </p><p>We don&#x27;t have any particular objection to people overriding the standard() methods -- what if there&#x27;s a better &quot;standard implementation&quot; available under some specific conditions?  Indeed, some &quot;standard&quot; methods are themselves overridden on other collection types: for example, ForwardingSortedSet<a href="/p/guava-libraries/w/edit/ForwardingSortedSet">?</a> implements standardRemove differently from ForwardingSet<a href="/p/guava-libraries/w/edit/ForwardingSet">?</a>, since using tailSet() allows a more efficient implementation.  That&#x27;s why they&#x27;re not final. </p>
</div>
 
 
 </div>
 </div>
 

</div>
</div>

 


 <script type="text/javascript">
 function delComment(sequence_num, create_time, delete_mode) {
 var f = document.forms["delcom"];
 f.sequence_num.value = sequence_num;
 f.create_time.value = create_time;
 f.mode.value = delete_mode;
 f.submit();
 return false;
 }
 </script>


 </div>
 
 
 
 
 <br>
 <div class="artifactcomment">
 <span class="indicator">&#9658;</span> <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionHelpersExplained&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fguava-libraries%2Fwiki%2FCollectionHelpersExplained"
 >Sign in</a> to add a comment
 </div>
 
 
 
 
 <form name="delcom" action="../w/delComment.do" method="POST">
 <input type="hidden" name="sequence_num" value="" >
 <input type="hidden" name="create_time" value="" >
 <input type="hidden" name="mode" value="" >
 <input type="hidden" name="pagename" value="CollectionHelpersExplained" >
 <input type="hidden" name="token" value="" >
 </form>


 <script src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/prettify/prettify.js"></script>
 <script type="text/javascript">
 prettyPrint();
 </script>

<script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/dit_scripts.js"></script>



  
 
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_core.js"></script>
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/17134919371905794448/js/ph_dwiki.js"></script>
 
 
 
 
</div> 

<div id="footer" dir="ltr">
 <div class="text">
 <a href="/projecthosting/terms.html">Terms</a> -
 <a href="http://www.google.com/privacy.html">Privacy</a> -
 <a href="/p/support/">Project Hosting Help</a>
 </div>
</div>
 <div class="hostedBy" style="margin-top: -20px;">
 <span style="vertical-align: top;">Powered by <a href="http://code.google.com/projecthosting/">Google Project Hosting</a></span>
 </div>

 
 


 
 
 <script type="text/javascript">_CS_reportToCsi();</script>
 
 </body>
</html>


