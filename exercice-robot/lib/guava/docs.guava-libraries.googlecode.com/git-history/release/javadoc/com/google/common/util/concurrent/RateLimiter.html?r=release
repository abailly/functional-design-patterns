<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0-google-v4) on Mon Aug 27 17:28:20 EDT 2012 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
RateLimiter (Guava: Google Core Libraries for Java 13.0.1 API)
</TITLE>

<META NAME="date" CONTENT="2012-08-27">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RateLimiter (Guava: Google Core Libraries for Java 13.0.1 API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/RateLimiter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/MoreExecutors.html" title="class in com.google.common.util.concurrent"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/Service.html" title="interface in com.google.common.util.concurrent"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?com/google/common/util/concurrent/RateLimiter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RateLimiter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.google.common.util.concurrent</FONT>
<BR>
Class RateLimiter</H2>
<PRE>
<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>com.google.common.util.concurrent.RateLimiter</B>
</PRE>
<HR>
<DL>
<DT><PRE><FONT SIZE="-1"><A HREF="http://jsr-305.googlecode.com/svn/trunk/javadoc/javax/annotation/concurrent/ThreadSafe.html?is-external=true" title="class or interface in javax.annotation.concurrent">@ThreadSafe</A>
<A HREF="../../../../../com/google/common/annotations/Beta.html" title="annotation in com.google.common.annotations">@Beta</A>
</FONT>public abstract class <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.89"><B>RateLimiter</B></A><DT>extends <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
A rate limiter. Conceptually, a rate limiter distributes permits at a
 configurable rate. Each <A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#acquire()"><CODE>acquire()</CODE></A> blocks if necessary until a permit is
 available, and then takes it. Once acquired, permits need not be released.

 <p>Rate limiters are often used to restrict the rate at which some
 physical or logical resource is accessed. This is in contrast to <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/Semaphore.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>Semaphore</CODE></A> which restricts the number of concurrent
 accesses instead of the rate (note though that concurrency and rate are closely related,
 e.g. see <a href="http://en.wikipedia.org/wiki/Little's_law">Little's Law</a>).

 <p>A <code>RateLimiter</code> is defined primarily by the rate at which permits
 are issued. Absent additional configuration, permits will be distributed at a
 fixed rate, defined in terms of permits per second. Permits will be distributed
 smoothly, with the delay between individual permits being adjusted to ensure
 that the configured rate is maintained.

 <p>It is possible to configure a <code>RateLimiter</code> to have a warmup
 period during which time the permits issued each second steadily increases until
 it hits the stable rate.

 <p>As an example, imagine that we have a list of tasks to execute, but we don't want to
 submit more than 2 per second:
<pre>  <code>final RateLimiter rateLimiter = RateLimiter.create(2.0); // rate is "2 permits per second"
  void submitTasks(List&lt;Runnable&gt; tasks, Executor executor) {
    for (Runnable task : tasks) {
      rateLimiter.acquire(); // may wait
      executor.execute(task);
    }
  }
</code></pre>

 <p>As another example, imagine that we produce a stream of data, and we want to cap it
 at 5kb per second. This could be accomplished by requiring a permit per byte, and specifying
 a rate of 5000 permits per second:
<pre>  <code>final RateLimiter rateLimiter = RateLimiter.create(5000.0); // rate = 5000 permits per second
  void submitPacket(byte[] packet) {
    rateLimiter.acquire(packet.length);
    networkService.send(packet);
  }
</code></pre>

 <p>It is important to note that the number of permits requested <i>never</i>
 affect the throttling of the request itself (an invocation to <code>acquire(1)</code>
 and an invocation to <code>acquire(1000)</code> will result in exactly the same throttling, if any),
 but it affects the throttling of the <i>next</i> request. I.e., if an expensive task
 arrives at an idle RateLimiter, it will be granted immediately, but it is the <i>next</i>
 request that will experience extra throttling, thus paying for the cost of the expensive
 task.

 <p>Note: <code>RateLimiter</code> does not provide fairness guarantees.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>13.0</DD>
<DT><B>Author:</B></DT>
  <DD>Dimitris Andreou</DD>
</DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#acquire()">acquire</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Acquires a permit from this <code>RateLimiter</code>, blocking until the request can be granted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#acquire(int)">acquire</A></B>(int&nbsp;permits)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Acquires the given number of permits from this <code>RateLimiter</code>, blocking until the
 request be granted.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html" title="class in com.google.common.util.concurrent">RateLimiter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#create(double)">create</A></B>(double&nbsp;permitsPerSecond)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a <code>RateLimiter</code> with the specified stable throughput, given as
 "permits per second" (commonly referred to as <i>QPS</i>, queries per second).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html" title="class in com.google.common.util.concurrent">RateLimiter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#create(double, long, java.util.concurrent.TimeUnit)">create</A></B>(double&nbsp;permitsPerSecond,
             long&nbsp;warmupPeriod,
             <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a <code>RateLimiter</code> with the specified stable throughput, given as
 "permits per second" (commonly referred to as <i>QPS</i>, queries per second), and a
 <i>warmup period</i>, during which the <code>RateLimiter</code> smoothly ramps up its rate,
 until it reaches its maximum rate at the end of the period (as long as there are enough
 requests to saturate it).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#getRate()">getRate</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the stable rate (as <code>permits per seconds</code>) with which this
 <code>RateLimiter</code> is configured with.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#setRate(double)">setRate</A></B>(double&nbsp;permitsPerSecond)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Updates the stable rate of this <code>RateLimiter</code>, that is, the
 <code>permitsPerSecond</code> argument provided in the factory method that
 constructed the <code>RateLimiter</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#tryAcquire(int, long, java.util.concurrent.TimeUnit)">tryAcquire</A></B>(int&nbsp;permits,
                     long&nbsp;timeout,
                     <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Acquires the given number of permits from this <code>RateLimiter</code> if it can be obtained
 without exceeding the specified <code>timeout</code>, or returns <code>false</code>
 immediately (without waiting) if the permits would not have been granted
 before the timeout expired.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#tryAcquire(long, java.util.concurrent.TimeUnit)">tryAcquire</A></B>(long&nbsp;timeout,
                     <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Acquires a permit from this <code>RateLimiter</code> if it can be obtained
 without exceeding the specified <code>timeout</code>, or returns <code>false</code>
 immediately (without waiting) if the permit would not have been granted
 before the timeout expired.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="create(double)"><!-- --></A><H3>
create</H3>
<PRE>
public static <A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html" title="class in com.google.common.util.concurrent">RateLimiter</A> <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.226"><B>create</B></A>(double&nbsp;permitsPerSecond)</PRE>
<DL>
<DD>Creates a <code>RateLimiter</code> with the specified stable throughput, given as
 "permits per second" (commonly referred to as <i>QPS</i>, queries per second).

 <p>The returned <code>RateLimiter</code> ensures that on average no more than <code>permitsPerSecond</code> are issued during any given second, with sustained requests
 being smoothly spread over each second. When the incoming request rate exceeds
 <code>permitsPerSecond</code> the rate limiter will release one permit every <code>(1.0 / permitsPerSecond)</code> seconds. When the rate limiter is unused,
 bursts of up to <code>permitsPerSecond</code> permits will be allowed, with subsequent
 requests being smoothly limited at the stable rate of <code>permitsPerSecond</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>permitsPerSecond</CODE> - the rate of the returned <code>RateLimiter</code>, measured in
        how many permits become available per second.</DL>
</DD>
</DL>
<HR>

<A NAME="create(double, long, java.util.concurrent.TimeUnit)"><!-- --></A><H3>
create</H3>
<PRE>
public static <A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html" title="class in com.google.common.util.concurrent">RateLimiter</A> <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.260"><B>create</B></A>(double&nbsp;permitsPerSecond,
                                 long&nbsp;warmupPeriod,
                                 <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</PRE>
<DL>
<DD>Creates a <code>RateLimiter</code> with the specified stable throughput, given as
 "permits per second" (commonly referred to as <i>QPS</i>, queries per second), and a
 <i>warmup period</i>, during which the <code>RateLimiter</code> smoothly ramps up its rate,
 until it reaches its maximum rate at the end of the period (as long as there are enough
 requests to saturate it). Similarly, if the <code>RateLimiter</code> is left <i>unused</i> for
 a duration of <code>warmupPeriod</code>, it will gradually return to its "cold" state,
 i.e. it will go through the same warming up process as when it was first created.

 <p>The returned <code>RateLimiter</code> is intended for cases where the resource that actually
 fulfils the requests (e.g., a remote server) needs "warmup" time, rather than
 being immediately accessed at the stable (maximum) rate.

 <p>The returned <code>RateLimiter</code> starts in a "cold" state (i.e. the warmup period
 will follow), and if it is left unused for long enough, it will return to that state.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>permitsPerSecond</CODE> - the rate of the returned <code>RateLimiter</code>, measured in
        how many permits become available per second<DD><CODE>warmupPeriod</CODE> - the duration of the period where the <code>RateLimiter</code> ramps up its
        rate, before reaching its stable (maximum) rate<DD><CODE>unit</CODE> - the time unit of the warmupPeriod argument</DL>
</DD>
</DL>
<HR>

<A NAME="setRate(double)"><!-- --></A><H3>
setRate</H3>
<PRE>
public final void <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.338"><B>setRate</B></A>(double&nbsp;permitsPerSecond)</PRE>
<DL>
<DD>Updates the stable rate of this <code>RateLimiter</code>, that is, the
 <code>permitsPerSecond</code> argument provided in the factory method that
 constructed the <code>RateLimiter</code>. Currently throttled threads will <b>not</b>
 be awakened as a result of this invocation, thus they do not observe the new rate;
 only subsequent requests will.

 <p>Note though that, since each request repays (by waiting, if necessary) the cost
 of the <i>previous</i> request, this means that the very next request
 after an invocation to <code>setRate</code> will not be affected by the new rate;
 it will pay the cost of the previous request, which is in terms of the previous rate.

 <p>The behavior of the <code>RateLimiter</code> is not modified in any other way,
 e.g. if the <code>RateLimiter</code> was configured with a warmup period of 20 seconds,
 it still has a warmup period of 20 seconds after this method invocation.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>permitsPerSecond</CODE> - the new stable rate of this <code>RateLimiter</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="getRate()"><!-- --></A><H3>
getRate</H3>
<PRE>
public final double <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.356"><B>getRate</B></A>()</PRE>
<DL>
<DD>Returns the stable rate (as <code>permits per seconds</code>) with which this
 <code>RateLimiter</code> is configured with. The initial value of this is the same as
 the <code>permitsPerSecond</code> argument passed in the factory method that produced
 this <code>RateLimiter</code>, and it is only updated after invocations
 to <A HREF="../../../../../com/google/common/util/concurrent/RateLimiter.html#setRate(double)">setRate(double)</A>.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="acquire()"><!-- --></A><H3>
acquire</H3>
<PRE>
public void <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.365"><B>acquire</B></A>()</PRE>
<DL>
<DD>Acquires a permit from this <code>RateLimiter</code>, blocking until the request can be granted.

 <p>This method is equivalent to <code>acquire(1)</code>.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="acquire(int)"><!-- --></A><H3>
acquire</H3>
<PRE>
public void <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.375"><B>acquire</B></A>(int&nbsp;permits)</PRE>
<DL>
<DD>Acquires the given number of permits from this <code>RateLimiter</code>, blocking until the
 request be granted.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>permits</CODE> - the number of permits to acquire</DL>
</DD>
</DL>
<HR>

<A NAME="tryAcquire(long, java.util.concurrent.TimeUnit)"><!-- --></A><H3>
tryAcquire</H3>
<PRE>
public boolean <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.396"><B>tryAcquire</B></A>(long&nbsp;timeout,
                          <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</PRE>
<DL>
<DD>Acquires a permit from this <code>RateLimiter</code> if it can be obtained
 without exceeding the specified <code>timeout</code>, or returns <code>false</code>
 immediately (without waiting) if the permit would not have been granted
 before the timeout expired.

 <p>This method is equivalent to <code>tryAcquire(1, timeout, unit)</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>timeout</CODE> - the maximum time to wait for the permit<DD><CODE>unit</CODE> - the time unit of the timeout argument
<DT><B>Returns:</B><DD><code>true</code> if the permit was acquired, <code>false</code> otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="tryAcquire(int, long, java.util.concurrent.TimeUnit)"><!-- --></A><H3>
tryAcquire</H3>
<PRE>
public boolean <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.411"><B>tryAcquire</B></A>(int&nbsp;permits,
                          long&nbsp;timeout,
                          <A HREF="http://download.oracle.com/javase/6/docs/api/java/util/concurrent/TimeUnit.html?is-external=true" title="class or interface in java.util.concurrent">TimeUnit</A>&nbsp;unit)</PRE>
<DL>
<DD>Acquires the given number of permits from this <code>RateLimiter</code> if it can be obtained
 without exceeding the specified <code>timeout</code>, or returns <code>false</code>
 immediately (without waiting) if the permits would not have been granted
 before the timeout expired.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>permits</CODE> - the number of permits to acquire<DD><CODE>timeout</CODE> - the maximum time to wait for the permits<DD><CODE>unit</CODE> - the time unit of the timeout argument
<DT><B>Returns:</B><DD><code>true</code> if the permits were acquired, <code>false</code> otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <A HREF="../../../../../src-html/com/google/common/util/concurrent/RateLimiter.html#line.472"><B>toString</B></A>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/RateLimiter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/MoreExecutors.html" title="class in com.google.common.util.concurrent"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../com/google/common/util/concurrent/Service.html" title="interface in com.google.common.util.concurrent"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?com/google/common/util/concurrent/RateLimiter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RateLimiter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
Copyright &#169; 2010-2012. All Rights Reserved.
</BODY>
</HTML>
