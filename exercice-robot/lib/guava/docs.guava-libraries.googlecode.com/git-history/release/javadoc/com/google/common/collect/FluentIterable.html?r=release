<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0-google-v4) on Mon Aug 27 17:28:18 EDT 2012 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
FluentIterable (Guava: Google Core Libraries for Java 13.0.1 API)
</TITLE>

<META NAME="date" CONTENT="2012-08-27">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="FluentIterable (Guava: Google Core Libraries for Java 13.0.1 API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FluentIterable.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/google/common/collect/EnumMultiset.html" title="class in com.google.common.collect"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/google/common/collect/ForwardingCollection.html" title="class in com.google.common.collect"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/google/common/collect/FluentIterable.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FluentIterable.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.google.common.collect</FONT>
<BR>
Class FluentIterable&lt;E&gt;</H2>
<PRE>
<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>com.google.common.collect.FluentIterable&lt;E&gt;</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;E&gt;</DD>
</DL>
<HR>
<DL>
<DT><PRE><FONT SIZE="-1"><A HREF="../../../../com/google/common/annotations/Beta.html" title="annotation in com.google.common.annotations">@Beta</A>
<A HREF="../../../../com/google/common/annotations/GwtCompatible.html" title="annotation in com.google.common.annotations">@GwtCompatible</A>(<A HREF="../../../../com/google/common/annotations/GwtCompatible.html#emulated()">emulated</A>=true)
</FONT>public abstract class <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.70"><B>FluentIterable&lt;E&gt;</B></A><DT>extends <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;E&gt;</DL>
</PRE>

<P>
<code>FluentIterable</code> provides a rich interface for manipulating <code>Iterable</code>s in a chained
 fashion. A <code>FluentIterable</code> can be created from an <code>Iterable</code>, or from a set of
 elements. The following types of methods are provided on <code>FluentIterable</code>:
 <ul>
 <li>chained methods which return a new <code>FluentIterable</code> based in some way on the contents
 of the current one (for example <A HREF="../../../../com/google/common/collect/FluentIterable.html#transform(com.google.common.base.Function)"><CODE>transform(com.google.common.base.Function<? super E, T>)</CODE></A>)
 <li>conversion methods which copy the <code>FluentIterable</code>'s contents into a new collection or
 array (for example <A HREF="../../../../com/google/common/collect/FluentIterable.html#toImmutableList()"><CODE>toImmutableList()</CODE></A>)
 <li>element extraction methods which facilitate the retrieval of certain elements (for example
 <A HREF="../../../../com/google/common/collect/FluentIterable.html#last()"><CODE>last()</CODE></A>)
 <li>query methods which answer questions about the <code>FluentIterable</code>'s contents (for example
 <A HREF="../../../../com/google/common/collect/FluentIterable.html#anyMatch(com.google.common.base.Predicate)"><CODE>anyMatch(com.google.common.base.Predicate<? super E>)</CODE></A>)
 </ul>

 <p>Here is an example that merges the lists returned by two separate database calls, transforms
 it by invoking <code>toString()</code> on each element, and returns the first 10 elements as an
 <code>ImmutableList</code>: <pre>   <code>FluentIterable
       .from(database.getClientList())
       .filter(activeInLastMonth())
       .transform(Functions.toStringFunction())
       .limit(10)
       .toImmutableList();</code></pre>

 Anything which can be done using <code>FluentIterable</code> could be done in a different fashion
 (often with <A HREF="../../../../com/google/common/collect/Iterables.html" title="class in com.google.common.collect"><CODE>Iterables</CODE></A>), however the use of <code>FluentIterable</code> makes many sets of
 operations significantly more concise.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>12.0</DD>
<DT><B>Author:</B></DT>
  <DD>Marcin Mikosik</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected </CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#FluentIterable()">FluentIterable</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor for use by subclasses.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#allMatch(com.google.common.base.Predicate)">allMatch</A></B>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if every element in this fluent iterable satisfies the predicate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#anyMatch(com.google.common.base.Predicate)">anyMatch</A></B>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if any element in this fluent iterable satisfies the predicate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#contains(java.lang.Object)">contains</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;element)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if this fluent iterable contains any object for which
 <code>equals(element)</code> is true.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#cycle()">cycle</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a fluent iterable whose <code>Iterator</code> cycles indefinitely over the elements of
 this fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#filter(java.lang.Class)">filter</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the elements from this fluent iterable that are instances of class <code>type</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#filter(com.google.common.base.Predicate)">filter</A></B>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the elements from this fluent iterable that satisfy a predicate.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#first()">first</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the first element in this fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#firstMatch(com.google.common.base.Predicate)">firstMatch</A></B>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the first element in this fluent iterable that
 satisfies the given predicate, if such an element exists.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;E&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#from(com.google.common.collect.FluentIterable)">from</A></B>(<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt;&nbsp;iterable)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>instances of <code>FluentIterable</code> don't need to be converted to
     <code>FluentIterable</code></I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;E&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#from(java.lang.Iterable)">from</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;E&gt;&nbsp;iterable)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a fluent iterable that wraps <code>iterable</code>, or <code>iterable</code> itself if it
 is already a <code>FluentIterable</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#get(int)">get</A></B>(int&nbsp;position)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the element at the specified position in this fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#isEmpty()">isEmpty</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines whether this fluent iterable is empty.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#last()">last</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the last element in this fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#limit(int)">limit</A></B>(int&nbsp;size)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a fluent iterable with the first <code>size</code> elements of this
 fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#size()">size</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of elements in this fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#skip(int)">skip</A></B>(int&nbsp;numberToSkip)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a view of this fluent iterable that skips its first <code>numberToSkip</code>
 elements.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toArray(java.lang.Class)">toArray</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array containing all of the elements from this fluent iterable in iteration order.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/ImmutableList.html" title="class in com.google.common.collect">ImmutableList</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toImmutableList()">toImmutableList</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <code>ImmutableList</code> containing all of the elements from this
 fluent iterable in proper sequence.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/ImmutableSet.html" title="class in com.google.common.collect">ImmutableSet</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toImmutableSet()">toImmutableSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <code>ImmutableSet</code> containing all of the elements from this
 fluent iterable with duplicates removed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/ImmutableSortedSet.html" title="class in com.google.common.collect">ImmutableSortedSet</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toImmutableSortedSet(java.util.Comparator)">toImmutableSortedSet</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/util/Comparator.html?is-external=true" title="class or interface in java.util">Comparator</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;comparator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <code>ImmutableSortedSet</code> containing all of the elements from this
 <code>FluentIterable</code> in the order specified by <code>comparator</code>, with duplicates
 (determined by <code>comaprator.compare(x, y) == 0</code>) removed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/google/common/collect/ImmutableList.html" title="class in com.google.common.collect">ImmutableList</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toSortedImmutableList(java.util.Comparator)">toSortedImmutableList</A></B>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/util/Comparator.html?is-external=true" title="class or interface in java.util">Comparator</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;comparator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an <code>ImmutableList</code> containing all of the elements from this
 <code>FluentIterable</code> in the order specified by <code>comparator</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a string representation of this fluent iterable, with the format
 <code>[e1, e2, ..., en]</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#transform(com.google.common.base.Function)">transform</A></B>(<A HREF="../../../../com/google/common/base/Function.html" title="interface in com.google.common.base">Function</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>,T&gt;&nbsp;function)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a fluent iterable that applies <code>function</code> to each element of this
 fluent iterable.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/google/common/collect/FluentIterable.html#transformAndConcat(com.google.common.base.Function)">transformAndConcat</A></B>(<A HREF="../../../../com/google/common/base/Function.html" title="interface in com.google.common.base">Function</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>,? extends <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;T&gt;&gt;&nbsp;function)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Applies <code>function</code> to each element of this fluent iterable and returns
 a fluent iterable with the concatenated combination of results.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Iterable"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface java.lang.<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true#iterator()" title="class or interface in java.lang">iterator</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="FluentIterable()"><!-- --></A><H3>
FluentIterable</H3>
<PRE>
protected <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.76"><B>FluentIterable</B></A>()</PRE>
<DL>
<DD>Constructor for use by subclasses.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="from(java.lang.Iterable)"><!-- --></A><H3>
from</H3>
<PRE>
public static &lt;E&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.88"><B>from</B></A>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;E&gt;&nbsp;iterable)</PRE>
<DL>
<DD>Returns a fluent iterable that wraps <code>iterable</code>, or <code>iterable</code> itself if it
 is already a <code>FluentIterable</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="from(com.google.common.collect.FluentIterable)"><!-- --></A><H3>
from</H3>
<PRE>
<FONT SIZE="-1"><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
</FONT>public static &lt;E&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.107"><B>from</B></A>(<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;E&gt;&nbsp;iterable)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>instances of <code>FluentIterable</code> don't need to be converted to
     <code>FluentIterable</code></I>
<P>
<DD>Construct a fluent iterable from another fluent iterable. This is obviously never necessary,
 but is intended to help call out cases where one migration from <code>Iterable</code> to
 <code>FluentIterable</code> has obviated the need to explicitly convert to a <code>FluentIterable</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.116"><B>toString</B></A>()</PRE>
<DL>
<DD>Returns a string representation of this fluent iterable, with the format
 <code>[e1, e2, ..., en]</code>.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="size()"><!-- --></A><H3>
size</H3>
<PRE>
public final int <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.123"><B>size</B></A>()</PRE>
<DL>
<DD>Returns the number of elements in this fluent iterable.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="contains(java.lang.Object)"><!-- --></A><H3>
contains</H3>
<PRE>
public final boolean <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.131"><B>contains</B></A>(<FONT SIZE="-1"><A HREF="http://jsr-305.googlecode.com/svn/trunk/javadoc/javax/annotation/Nullable.html?is-external=true" title="class or interface in javax.annotation">@Nullable</A></FONT>
                              <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;element)</PRE>
<DL>
<DD>Returns <code>true</code> if this fluent iterable contains any object for which
 <code>equals(element)</code> is true.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="cycle()"><!-- --></A><H3>
cycle</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.148"><B>cycle</B></A>()</PRE>
<DL>
<DD>Returns a fluent iterable whose <code>Iterator</code> cycles indefinitely over the elements of
 this fluent iterable.

 <p>That iterator supports <code>remove()</code> if <code>iterable.iterator()</code> does. After
 <code>remove()</code> is called, subsequent cycles omit the removed element, which is no longer in
 this fluent iterable. The iterator's <code>hasNext()</code> method returns <code>true</code> until
 this fluent iterable is empty.

 <p><b>Warning:</b> Typical uses of the resulting iterator may produce an infinite loop. You
 should use an explicit <code>break</code> or be certain that you will eventually remove all the
 elements.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="filter(com.google.common.base.Predicate)"><!-- --></A><H3>
filter</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.156"><B>filter</B></A>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</PRE>
<DL>
<DD>Returns the elements from this fluent iterable that satisfy a predicate. The
 resulting fluent iterable's iterator does not support <code>remove()</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="filter(java.lang.Class)"><!-- --></A><H3>
filter</H3>
<PRE>
<FONT SIZE="-1"><A HREF="../../../../com/google/common/annotations/GwtIncompatible.html" title="annotation in com.google.common.annotations">@GwtIncompatible</A>(<A HREF="../../../../com/google/common/annotations/GwtIncompatible.html#value()">value</A>="Class.isInstance")
</FONT>public final &lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.166"><B>filter</B></A>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</PRE>
<DL>
<DD>Returns the elements from this fluent iterable that are instances of class <code>type</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the type of elements desired</DL>
</DD>
</DL>
<HR>

<A NAME="anyMatch(com.google.common.base.Predicate)"><!-- --></A><H3>
anyMatch</H3>
<PRE>
public final boolean <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.173"><B>anyMatch</B></A>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</PRE>
<DL>
<DD>Returns <code>true</code> if any element in this fluent iterable satisfies the predicate.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="allMatch(com.google.common.base.Predicate)"><!-- --></A><H3>
allMatch</H3>
<PRE>
public final boolean <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.181"><B>allMatch</B></A>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</PRE>
<DL>
<DD>Returns <code>true</code> if every element in this fluent iterable satisfies the predicate.
 If this fluent iterable is empty, <code>true</code> is returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="firstMatch(com.google.common.base.Predicate)"><!-- --></A><H3>
firstMatch</H3>
<PRE>
public final <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.192"><B>firstMatch</B></A>(<A HREF="../../../../com/google/common/base/Predicate.html" title="interface in com.google.common.base">Predicate</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;predicate)</PRE>
<DL>
<DD>Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the first element in this fluent iterable that
 satisfies the given predicate, if such an element exists.

 <p><b>Warning:</b> avoid using a <code>predicate</code> that matches <code>null</code>. If <code>null</code>
 is matched in this fluent iterable, a <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang"><CODE>NullPointerException</CODE></A> will be thrown.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="transform(com.google.common.base.Function)"><!-- --></A><H3>
transform</H3>
<PRE>
public final &lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.204"><B>transform</B></A>(<A HREF="../../../../com/google/common/base/Function.html" title="interface in com.google.common.base">Function</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>,T&gt;&nbsp;function)</PRE>
<DL>
<DD>Returns a fluent iterable that applies <code>function</code> to each element of this
 fluent iterable.

 <p>The returned fluent iterable's iterator supports <code>remove()</code> if this iterable's
 iterator does. After a successful <code>remove()</code> call, this fluent iterable no longer
 contains the corresponding element.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="transformAndConcat(com.google.common.base.Function)"><!-- --></A><H3>
transformAndConcat</H3>
<PRE>
public &lt;T&gt; <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;T&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.219"><B>transformAndConcat</B></A>(<A HREF="../../../../com/google/common/base/Function.html" title="interface in com.google.common.base">Function</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>,? extends <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</A>&lt;T&gt;&gt;&nbsp;function)</PRE>
<DL>
<DD>Applies <code>function</code> to each element of this fluent iterable and returns
 a fluent iterable with the concatenated combination of results.  <code>function</code>
 returns an Iterable of results.

 <p>The returned fluent iterable's iterator supports <code>remove()</code> if this
 function-returned iterables' iterator does. After a successful <code>remove()</code> call,
 the returned fluent iterable no longer contains the corresponding element.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Since:</B></DT>
  <DD>13.0</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="first()"><!-- --></A><H3>
first</H3>
<PRE>
public final <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.231"><B>first</B></A>()</PRE>
<DL>
<DD>Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the first element in this fluent iterable.
 If the iterable is empty, <code>Optional.absent()</code> is returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if the first element is null; if this is a possibility, use
     <code>iterator().next()</code> or <A HREF="../../../../com/google/common/collect/Iterables.html#getFirst(java.lang.Iterable, T)"><CODE>Iterables.getFirst(java.lang.Iterable<? extends T>, T)</CODE></A> instead.</DL>
</DD>
</DL>
<HR>

<A NAME="last()"><!-- --></A><H3>
last</H3>
<PRE>
public final <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base">Optional</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.245"><B>last</B></A>()</PRE>
<DL>
<DD>Returns an <A HREF="../../../../com/google/common/base/Optional.html" title="class in com.google.common.base"><CODE>Optional</CODE></A> containing the last element in this fluent iterable.
 If the iterable is empty, <code>Optional.absent()</code> is returned.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if the last element is null; if this is a possibility, use
     <A HREF="../../../../com/google/common/collect/Iterables.html#getLast(java.lang.Iterable)"><CODE>Iterables.getLast(java.lang.Iterable<T>)</CODE></A> instead.</DL>
</DD>
</DL>
<HR>

<A NAME="skip(int)"><!-- --></A><H3>
skip</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.296"><B>skip</B></A>(int&nbsp;numberToSkip)</PRE>
<DL>
<DD>Returns a view of this fluent iterable that skips its first <code>numberToSkip</code>
 elements. If this fluent iterable contains fewer than <code>numberToSkip</code> elements,
 the returned fluent iterable skips all of its elements.

 <p>Modifications to this fluent iterable before a call to <code>iterator()</code> are
 reflected in the returned fluent iterable. That is, the its iterator skips the first
 <code>numberToSkip</code> elements that exist when the iterator is created, not when <code>skip()</code>
 is called.

 <p>The returned fluent iterable's iterator supports <code>remove()</code> if the
 <code>Iterator</code> of this fluent iterable supports it. Note that it is <i>not</i>
 possible to delete the last skipped element by immediately calling <code>remove()</code> on the
 returned fluent iterable's iterator, as the <code>Iterator</code> contract states that a call
 to <code>* remove()</code> before a call to <code>next()</code> will throw an
 <A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang"><CODE>IllegalStateException</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="limit(int)"><!-- --></A><H3>
limit</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="class in com.google.common.collect">FluentIterable</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.310"><B>limit</B></A>(int&nbsp;size)</PRE>
<DL>
<DD>Creates a fluent iterable with the first <code>size</code> elements of this
 fluent iterable. If this fluent iterable does not contain that many elements,
 the returned fluent iterable will have the same behavior as this fluent iterable.
 The returned fluent iterable's iterator supports <code>remove()</code> if this
 fluent iterable's iterator does.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>size</CODE> - the maximum number of elements in the returned fluent iterable
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true" title="class or interface in java.lang">IllegalArgumentException</A></CODE> - if <code>size</code> is negative</DL>
</DD>
</DL>
<HR>

<A NAME="isEmpty()"><!-- --></A><H3>
isEmpty</H3>
<PRE>
public final boolean <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.317"><B>isEmpty</B></A>()</PRE>
<DL>
<DD>Determines whether this fluent iterable is empty.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toImmutableList()"><!-- --></A><H3>
toImmutableList</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/ImmutableList.html" title="class in com.google.common.collect">ImmutableList</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.325"><B>toImmutableList</B></A>()</PRE>
<DL>
<DD>Returns an <code>ImmutableList</code> containing all of the elements from this
 fluent iterable in proper sequence.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toSortedImmutableList(java.util.Comparator)"><!-- --></A><H3>
toSortedImmutableList</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/ImmutableList.html" title="class in com.google.common.collect">ImmutableList</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.339"><B>toSortedImmutableList</B></A>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/util/Comparator.html?is-external=true" title="class or interface in java.util">Comparator</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;comparator)</PRE>
<DL>
<DD>Returns an <code>ImmutableList</code> containing all of the elements from this
 <code>FluentIterable</code> in the order specified by <code>comparator</code>.  To produce an
 <code>ImmutableList</code> sorted by its natural ordering, use
 <code>toSortedImmutableList(Ordering.natural())</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>comparator</CODE> - the function by which to sort list elements
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if any element is null<DT><B>Since:</B></DT>
  <DD>13.0</DD>
</DL>
</DD>
</DL>
<HR>

<A NAME="toImmutableSet()"><!-- --></A><H3>
toImmutableSet</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/ImmutableSet.html" title="class in com.google.common.collect">ImmutableSet</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.347"><B>toImmutableSet</B></A>()</PRE>
<DL>
<DD>Returns an <code>ImmutableSet</code> containing all of the elements from this
 fluent iterable with duplicates removed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toImmutableSortedSet(java.util.Comparator)"><!-- --></A><H3>
toImmutableSortedSet</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/ImmutableSortedSet.html" title="class in com.google.common.collect">ImmutableSortedSet</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt; <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.361"><B>toImmutableSortedSet</B></A>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/util/Comparator.html?is-external=true" title="class or interface in java.util">Comparator</A>&lt;? super <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;comparator)</PRE>
<DL>
<DD>Returns an <code>ImmutableSortedSet</code> containing all of the elements from this
 <code>FluentIterable</code> in the order specified by <code>comparator</code>, with duplicates
 (determined by <code>comaprator.compare(x, y) == 0</code>) removed. To produce an
 <code>ImmutableSortedSet</code> sorted by its natural ordering, use
 <code>toImmutableSortedSet(Ordering.natural())</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>comparator</CODE> - the function by which to sort set elements
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/NullPointerException.html?is-external=true" title="class or interface in java.lang">NullPointerException</A></CODE> - if any element is null</DL>
</DD>
</DL>
<HR>

<A NAME="toArray(java.lang.Class)"><!-- --></A><H3>
toArray</H3>
<PRE>
<FONT SIZE="-1"><A HREF="../../../../com/google/common/annotations/GwtIncompatible.html" title="annotation in com.google.common.annotations">@GwtIncompatible</A>(<A HREF="../../../../com/google/common/annotations/GwtIncompatible.html#value()">value</A>="Array.newArray(Class, int)")
</FONT>public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>[] <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.373"><B>toArray</B></A>(<A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;<A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A>&gt;&nbsp;type)</PRE>
<DL>
<DD>Returns an array containing all of the elements from this fluent iterable in iteration order.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the type of the elements
<DT><B>Returns:</B><DD>a newly-allocated array into which all the elements of this fluent iterable have
     been copied</DL>
</DD>
</DL>
<HR>

<A NAME="get(int)"><!-- --></A><H3>
get</H3>
<PRE>
public final <A HREF="../../../../com/google/common/collect/FluentIterable.html" title="type parameter in FluentIterable">E</A> <A HREF="../../../../src-html/com/google/common/collect/FluentIterable.html#line.385"><B>get</B></A>(int&nbsp;position)</PRE>
<DL>
<DD>Returns the element at the specified position in this fluent iterable.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>position</CODE> - position of the element to return
<DT><B>Returns:</B><DD>the element at the specified position in this fluent iterable
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://download.oracle.com/javase/6/docs/api/java/lang/IndexOutOfBoundsException.html?is-external=true" title="class or interface in java.lang">IndexOutOfBoundsException</A></CODE> - if <code>position</code> is negative or greater than or equal to
     the size of this fluent iterable</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/FluentIterable.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/google/common/collect/EnumMultiset.html" title="class in com.google.common.collect"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/google/common/collect/ForwardingCollection.html" title="class in com.google.common.collect"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?com/google/common/collect/FluentIterable.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FluentIterable.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>
Copyright &#169; 2010-2012. All Rights Reserved.
</BODY>
</HTML>
